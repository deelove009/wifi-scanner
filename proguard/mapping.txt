com.shixunaoyou.wifiscanner.AccountSettingsDialog -> com.shixunaoyou.wifiscanner.a:
    android.view.View mContentView -> b
    android.view.View mAccountInfo -> c
    android.view.View mAccountInputView -> d
    android.widget.TextView mAccountView -> e
    android.widget.EditText mNameEdit -> f
    android.widget.EditText mPasswordEdit -> g
    android.widget.CheckBox mShowPasswordCheckBox -> h
    android.widget.Button mSaveButton -> i
    android.widget.Button mCancelButton -> j
    android.widget.Button mRegisterButton -> k
    android.content.Context mContext -> l
    boolean mIsShowRegister -> m
    int mMode -> n
    void onCreate(android.os.Bundle) -> onCreate
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void validate() -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onClick(android.view.View) -> onClick
    int getDialogTitle() -> a
com.shixunaoyou.wifiscanner.BaseCustomActivity -> com.shixunaoyou.wifiscanner.b:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
com.shixunaoyou.wifiscanner.BaseCustomDialog -> com.shixunaoyou.wifiscanner.c:
    android.view.View mContentView -> a
    void onCreate(android.os.Bundle) -> onCreate
    int getDialogTitle() -> a
com.shixunaoyou.wifiscanner.BaseScannerActivity -> com.shixunaoyou.wifiscanner.d:
    void onBackPressed() -> onBackPressed
com.shixunaoyou.wifiscanner.ExitConfirmDialog -> com.shixunaoyou.wifiscanner.e:
    android.content.Context mContext -> b
    void onCreate(android.os.Bundle) -> onCreate
    int getDialogTitle() -> a
    void onClick(android.view.View) -> onClick
com.shixunaoyou.wifiscanner.LoadingActivity -> com.shixunaoyou.wifiscanner.LoadingActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
com.shixunaoyou.wifiscanner.LoadingActivity$splashhandler -> com.shixunaoyou.wifiscanner.f:
    com.shixunaoyou.wifiscanner.LoadingActivity this$0 -> a
    void run() -> run
com.shixunaoyou.wifiscanner.WifiScannerMainTabActivity -> com.shixunaoyou.wifiscanner.WifiScannerMainTabActivity:
    android.widget.RadioButton mWifiRadio -> a
    android.widget.RadioButton mPersonCentreRadio -> b
    android.widget.RadioButton mChestRadio -> c
    android.widget.RadioButton mSettingsRadio -> d
    android.widget.Button mRightButton -> e
    com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout mWifiSwitchLayout -> f
    android.widget.TextView mTitleView -> g
    android.widget.TabHost mHost -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.TabHost$TabSpec buildTabSpec(java.lang.String,int,int,android.content.Intent) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout -> com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout:
    android.content.Context mContext -> a
    android.widget.CheckBox mCheckBox -> b
    android.net.wifi.WifiManager mWifiManager -> c
    android.content.IntentFilter mIntentFilter -> d
    android.widget.TextView mInfoView -> e
    java.util.concurrent.atomic.AtomicBoolean mConnected -> f
    android.content.BroadcastReceiver mReceiver -> g
    void onFinishInflate() -> onFinishInflate
    void resume() -> a
    void pause() -> b
    void onClick(android.view.View) -> onClick
    void access$0(com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout,int) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout) -> a
    void access$2(com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout,android.net.NetworkInfo$DetailedState) -> a
com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout$1 -> com.shixunaoyou.wifiscanner.g:
    com.shixunaoyou.wifiscanner.WifiSwitchLinearLayout this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.shixunaoyou.wifiscanner.hub.LoginUtils -> com.shixunaoyou.wifiscanner.a.a:
    byte[] CACHE -> a
    java.lang.String mServer -> b
    int mPort -> c
    android.content.Context mContext -> d
    com.shixunaoyou.wifiscanner.hub.LoginUtils sInstance -> e
    com.shixunaoyou.wifiscanner.hub.LoginUtils getInstance(android.content.Context) -> a
    java.lang.String talkWithServer(java.lang.String,int,java.lang.String) -> a
    java.lang.String getChallenage() -> b
    byte[] ASC2Hex(char[]) -> a
    byte charToByte(char) -> a
    java.lang.String toMd5(byte[],int) -> a
    java.lang.String loginHub(java.lang.String,java.lang.String,java.lang.String) -> a
    void logoutHub() -> a
com.shixunaoyou.wifiscanner.legacy.PrefsHelper -> com.shixunaoyou.wifiscanner.b.a:
    android.content.SharedPreferences$Editor mEditor -> a
    android.content.SharedPreferences mPrefs -> b
    com.shixunaoyou.wifiscanner.legacy.PrefsHelper sInstance -> c
    com.shixunaoyou.wifiscanner.legacy.PrefsHelper getInstance(android.content.Context) -> a
    void saveServer(java.lang.String) -> a
    void savePort(int) -> a
com.shixunaoyou.wifiscanner.mail.GmailSender -> com.shixunaoyou.wifiscanner.c.a:
    java.lang.String mailhost -> a
    java.lang.String user -> b
    java.lang.String password -> c
    javax.mail.Session session -> d
    javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
    void sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.shixunaoyou.wifiscanner.mail.GmailSender$ByteArrayDataSource -> com.shixunaoyou.wifiscanner.c.b:
    byte[] data -> a
    java.lang.String type -> b
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String getName() -> getName
    java.io.OutputStream getOutputStream() -> getOutputStream
com.shixunaoyou.wifiscanner.mail.JSSEProvider -> com.shixunaoyou.wifiscanner.c.c:
com.shixunaoyou.wifiscanner.mail.JSSEProvider$1 -> com.shixunaoyou.wifiscanner.c.d:
    com.shixunaoyou.wifiscanner.mail.JSSEProvider this$0 -> a
    java.lang.Object run() -> run
com.shixunaoyou.wifiscanner.more.AboutProductActivity -> com.shixunaoyou.wifiscanner.more.AboutProductActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void initVersionView() -> c
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
    void onClick(android.view.View) -> onClick
com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem -> com.shixunaoyou.wifiscanner.more.a:
    com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem ProductIntroduce -> b
    com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem Questions -> c
    com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem AboutCompany -> d
    com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem UserProtocol -> a
    com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem[] ENUM$VALUES -> e
    int getTitleResId() -> a
    void action(android.content.Context) -> a
    com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem[] values() -> b
com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem$1 -> com.shixunaoyou.wifiscanner.more.b:
    int getTitleResId() -> a
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem$2 -> com.shixunaoyou.wifiscanner.more.c:
    int getTitleResId() -> a
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem$3 -> com.shixunaoyou.wifiscanner.more.d:
    int getTitleResId() -> a
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.AboutProductActivity$AboutItem$4 -> com.shixunaoyou.wifiscanner.more.e:
    int getTitleResId() -> a
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.AboutUSActivity -> com.shixunaoyou.wifiscanner.more.AboutUSActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onPause() -> onPause
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
com.shixunaoyou.wifiscanner.more.FeedbackActivity -> com.shixunaoyou.wifiscanner.more.FeedbackActivity:
    java.util.regex.Pattern rfc2822 -> a
    android.widget.TextView mSubjectView -> b
    android.widget.TextView mContentView -> c
    android.widget.TextView mAddressView -> d
    java.lang.String mSubject -> e
    java.lang.String mContent -> f
    java.lang.String mAddress -> g
    android.os.Handler mHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void showToastMessage(int) -> a
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
    java.lang.String access$0(com.shixunaoyou.wifiscanner.more.FeedbackActivity) -> a
    java.lang.String access$1(com.shixunaoyou.wifiscanner.more.FeedbackActivity) -> b
    android.os.Handler access$2(com.shixunaoyou.wifiscanner.more.FeedbackActivity) -> c
com.shixunaoyou.wifiscanner.more.FeedbackActivity$1 -> com.shixunaoyou.wifiscanner.more.f:
    com.shixunaoyou.wifiscanner.more.FeedbackActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.shixunaoyou.wifiscanner.more.FeedbackActivity$2 -> com.shixunaoyou.wifiscanner.more.g:
    com.shixunaoyou.wifiscanner.more.FeedbackActivity this$0 -> a
    void run() -> run
com.shixunaoyou.wifiscanner.more.MoreActivity -> com.shixunaoyou.wifiscanner.more.MoreActivity:
    android.widget.LinearLayout mContainterView -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum -> com.shixunaoyou.wifiscanner.more.h:
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum NotificationSettings -> b
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum Update -> c
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum Feedback -> d
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum Share -> e
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum ProductCenter -> f
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum AboutProduct -> g
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum ExitApplication -> a
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum[] ENUM$VALUES -> h
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
    com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum[] values() -> c
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum$1 -> com.shixunaoyou.wifiscanner.more.i:
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum$2 -> com.shixunaoyou.wifiscanner.more.j:
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum$3 -> com.shixunaoyou.wifiscanner.more.k:
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum$4 -> com.shixunaoyou.wifiscanner.more.l:
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum$5 -> com.shixunaoyou.wifiscanner.more.m:
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum$6 -> com.shixunaoyou.wifiscanner.more.n:
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.MoreActivity$MoreItemEnum$7 -> com.shixunaoyou.wifiscanner.more.o:
    int getImageResId() -> a
    int getTitleResId() -> b
    void action(android.content.Context) -> a
com.shixunaoyou.wifiscanner.more.ProductCenterActivity -> com.shixunaoyou.wifiscanner.more.ProductCenterActivity:
    void onCreate(android.os.Bundle) -> onCreate
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
com.shixunaoyou.wifiscanner.more.ProductInfoWebViewActivity -> com.shixunaoyou.wifiscanner.more.ProductInfoWebViewActivity:
    java.lang.String getUrl() -> c
    int getCustomTitleResecouse() -> a
com.shixunaoyou.wifiscanner.more.QuestionWebViewActivity -> com.shixunaoyou.wifiscanner.more.QuestionWebViewActivity:
    java.lang.String getUrl() -> c
    int getCustomTitleResecouse() -> a
com.shixunaoyou.wifiscanner.more.SettingActivity -> com.shixunaoyou.wifiscanner.more.SettingActivity:
    android.preference.CheckBoxPreference mServiceNotificationSettings -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.shixunaoyou.wifiscanner.more.SettingsWebViewActivity -> com.shixunaoyou.wifiscanner.more.p:
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getUrl() -> c
    int getLayoutRecourse() -> b
com.shixunaoyou.wifiscanner.more.UserProtocolActivity -> com.shixunaoyou.wifiscanner.more.UserProtocolActivity:
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
com.shixunaoyou.wifiscanner.personcentre.PersonCentreActivity -> com.shixunaoyou.wifiscanner.personcentre.PersonCentreActivity:
    android.widget.Button mRegisterBtn -> a
    android.widget.Button mChangeAccountBtn -> b
    android.widget.Button mForgetAccountBtn -> c
    android.widget.Button mAccountSettingsBtn -> d
    android.widget.TextView mLoginStatusTextView -> e
    android.widget.TextView mAccountNameTextView -> f
    android.view.View mHaveAccountButtons -> g
    android.view.View mNoAccountButtons -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void updateButtonsStatus() -> a
    void onClick(android.view.View) -> onClick
    void changeAccount() -> b
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.shixunaoyou.wifiscanner.personcentre.RegisterActivity -> com.shixunaoyou.wifiscanner.personcentre.RegisterActivity:
    java.lang.String TAG -> a
    java.lang.String TOKEN_URL -> b
    android.os.Handler mUIHandler -> c
    android.widget.EditText mPhoneNumberView -> d
    android.widget.EditText mPasswordNumberView -> e
    android.widget.EditText mUsernameView -> f
    android.widget.EditText mTokenView -> g
    android.widget.Button mGetTokenButton -> h
    android.widget.Button mResigterButton -> i
    android.content.Context mContext -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean verifyPhonNumber() -> d
    java.lang.String getRegisterUrl() -> e
    void onResume() -> onResume
    void onPause() -> onPause
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
    void access$0(com.shixunaoyou.wifiscanner.personcentre.RegisterActivity) -> a
    void access$1(com.shixunaoyou.wifiscanner.personcentre.RegisterActivity,java.lang.String) -> a
    android.os.Handler access$2(com.shixunaoyou.wifiscanner.personcentre.RegisterActivity) -> b
    android.content.Context access$3(com.shixunaoyou.wifiscanner.personcentre.RegisterActivity) -> c
    java.lang.String access$4() -> c
    java.lang.String access$5(com.shixunaoyou.wifiscanner.personcentre.RegisterActivity) -> d
com.shixunaoyou.wifiscanner.personcentre.RegisterActivity$1 -> com.shixunaoyou.wifiscanner.personcentre.a:
    com.shixunaoyou.wifiscanner.personcentre.RegisterActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.shixunaoyou.wifiscanner.personcentre.RegisterActivity$2 -> com.shixunaoyou.wifiscanner.personcentre.b:
    com.shixunaoyou.wifiscanner.personcentre.RegisterActivity this$0 -> a
    java.lang.String val$requestTokenUrl -> b
    void run() -> run
com.shixunaoyou.wifiscanner.personcentre.RegisterActivity$3 -> com.shixunaoyou.wifiscanner.personcentre.c:
    com.shixunaoyou.wifiscanner.personcentre.RegisterActivity this$0 -> a
    java.lang.String val$errorMsg -> b
    void run() -> run
com.shixunaoyou.wifiscanner.personcentre.RegisterActivity$4 -> com.shixunaoyou.wifiscanner.personcentre.d:
    com.shixunaoyou.wifiscanner.personcentre.RegisterActivity this$0 -> a
    void run() -> run
com.shixunaoyou.wifiscanner.update.CheckUpdateAsyncTask -> com.shixunaoyou.wifiscanner.update.a:
    android.content.Context mContext -> a
    boolean mShoulShowInfo -> b
    org.json.JSONObject doInBackground$6d20c8ab() -> a
    boolean checkVersion(java.lang.String) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.update.CheckUpdateAsyncTask$CheckCompletedListener -> com.shixunaoyou.wifiscanner.update.b:
    void doAction(int) -> a
com.shixunaoyou.wifiscanner.update.DownloadConfirmDialog -> com.shixunaoyou.wifiscanner.update.c:
    android.view.View mContentView -> b
    android.content.Context mContext -> c
    java.lang.String mUpdateContent -> d
    android.widget.TextView mUpdateContentView -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    int getDialogTitle() -> a
com.shixunaoyou.wifiscanner.update.DownloadNotificationHandler -> com.shixunaoyou.wifiscanner.update.d:
    android.content.Context mContext -> a
    android.app.Notification mDownNotification -> b
    android.widget.RemoteViews mContentView -> c
    android.app.NotificationManager mNm -> d
    long mLastUpdateTime -> e
    void sendNotification() -> a
    void updateNotification(int) -> a
    void cancelNotification() -> b
com.shixunaoyou.wifiscanner.update.DownloadUpdateService -> com.shixunaoyou.wifiscanner.update.DownloadUpdateService:
    java.lang.String mFileFullPath -> a
    android.content.Context mContext -> b
    boolean isUpdating -> c
    com.shixunaoyou.wifiscanner.update.DownloadNotificationHandler mNotificationHandler -> d
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    int access$0(com.shixunaoyou.wifiscanner.update.DownloadUpdateService) -> a
    java.lang.String access$1(com.shixunaoyou.wifiscanner.update.DownloadUpdateService) -> b
    android.content.Context access$2(com.shixunaoyou.wifiscanner.update.DownloadUpdateService) -> c
    void access$3(com.shixunaoyou.wifiscanner.update.DownloadUpdateService,boolean) -> a
    void access$4(com.shixunaoyou.wifiscanner.update.DownloadUpdateService,int) -> a
    com.shixunaoyou.wifiscanner.update.DownloadNotificationHandler access$5(com.shixunaoyou.wifiscanner.update.DownloadUpdateService) -> d
com.shixunaoyou.wifiscanner.update.DownloadUpdateService$DownloadTask -> com.shixunaoyou.wifiscanner.update.e:
    java.lang.String mUpdateUrl -> a
    com.shixunaoyou.wifiscanner.update.DownloadUpdateService this$0 -> b
    java.lang.Integer doInBackground$9ecd34e() -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.shixunaoyou.wifiscanner.util.HttpUtils -> com.shixunaoyou.wifiscanner.d.a:
    java.lang.String TAG -> a
    org.apache.http.client.HttpClient mHttpClient -> b
    org.json.JSONObject sendPostRequest(java.lang.String) -> a
com.shixunaoyou.wifiscanner.util.KeyStore -> com.shixunaoyou.wifiscanner.d.b:
    android.net.LocalSocketAddress sAddress -> a
    int mError -> b
    com.shixunaoyou.wifiscanner.util.KeyStore getInstance() -> a
    int test() -> b
    java.util.ArrayList execute(int,byte[][]) -> a
com.shixunaoyou.wifiscanner.util.Logger -> com.shixunaoyou.wifiscanner.d.c:
    java.lang.String TAG -> a
    com.shixunaoyou.wifiscanner.util.Logger$Printer sPrinter -> b
    void debug(java.lang.String,java.lang.String) -> a
com.shixunaoyou.wifiscanner.util.Logger$Printer -> com.shixunaoyou.wifiscanner.d.d:
    void d(java.lang.String,java.lang.String) -> a
com.shixunaoyou.wifiscanner.util.Utils -> com.shixunaoyou.wifiscanner.d.e:
    int mDisplayWidth -> a
    int mDisplayHeight -> b
    java.util.ArrayList channelsFrequency -> c
    int getChannelFromFrequency(int) -> a
    java.lang.String getUserName(android.content.Context) -> a
    java.lang.String getPassword(android.content.Context) -> b
    boolean setPref(android.content.Context,java.lang.String,java.lang.String) -> a
    void setUserName(android.content.Context,java.lang.String) -> a
    void setPassword(android.content.Context,java.lang.String) -> b
    void clearAccount(android.content.Context) -> c
    boolean getEnableAutoLogin(android.content.Context) -> d
    boolean getEnableShowChannel(android.content.Context) -> e
    boolean getEnableShowRssi(android.content.Context) -> f
    boolean getEnableServiceNotification(android.content.Context) -> g
    void setLoginStatus(android.content.Context,int) -> a
    boolean getIsServiceChangeStatus(android.content.Context) -> h
    void setIsServiceUpdate(android.content.Context,boolean) -> a
    int getLoginStatus(android.content.Context) -> i
    boolean check591Server(android.content.Context) -> j
    int checkTestUrl(android.content.Context) -> k
    java.lang.String inputStream2String(java.io.InputStream) -> a
    boolean isHasWifiConnection(android.content.Context) -> l
    long getLastLoginTime(android.content.Context) -> m
    void setLastLoginTime(android.content.Context,long) -> a
    long getDataTarfficOfLogin(android.content.Context) -> n
    void setDataTrafficWhenLogin(android.content.Context,long) -> b
    java.lang.String getGateway(android.content.Context) -> o
    void setErrorMessage(android.content.Context,java.lang.String) -> c
    java.lang.String getUpdateUrl(android.content.Context) -> p
    void setUpdateUrl(android.content.Context,java.lang.String) -> d
    java.lang.String getShowErrorMessage(android.content.Context) -> q
    int getFilterMode(android.content.Context) -> r
    void setFilterMode(android.content.Context,int) -> b
    java.lang.String getUserAddress(android.content.Context) -> s
    void setUserAddress(android.content.Context,java.lang.String) -> e
    int getPercentageOfdBm(int) -> b
    int getResIdofStatus(int) -> c
    java.lang.String getOperatorWifiName(java.lang.String) -> a
    void installUpdateApk(android.content.Context,java.lang.String) -> f
    boolean checkAndCreatePath() -> a
    java.lang.String getAppList(android.content.Context) -> t
    void setAppList(android.content.Context,java.lang.String) -> g
    int getActivityDisplayWidth(android.app.Activity) -> a
    int getActivityDisplayHeight(android.app.Activity) -> b
    java.lang.String getHotwordList(android.content.Context) -> u
    void setHotwordList(android.content.Context,java.lang.String) -> h
    long getHotwordUpdateTime(android.content.Context) -> v
    void setHotwordUpdateTime(android.content.Context,long) -> c
com.shixunaoyou.wifiscanner.wifi.AccessPoint -> com.shixunaoyou.wifiscanner.wifi.a:
    java.lang.String ssid -> a
    java.lang.String bssid -> b
    int security -> c
    int networkId -> d
    android.net.wifi.WifiConfiguration mConfig -> f
    android.net.wifi.ScanResult mScanResult -> e
    int mLevel -> g
    android.net.wifi.WifiInfo mInfo -> h
    android.net.NetworkInfo$DetailedState mState -> i
    android.widget.ImageView mSignalView -> j
    android.widget.ImageView mWifiSecurity -> k
    android.widget.TextView mSsidNameView -> l
    android.widget.TextView mRssiView -> m
    android.widget.TextView mChannelView -> n
    android.content.Context mContext -> o
    int getSecurity(android.net.wifi.ScanResult) -> b
    com.shixunaoyou.wifiscanner.wifi.AccessPoint$PskType getPskType(android.net.wifi.ScanResult) -> c
    void onBindView(android.view.View) -> onBindView
    boolean isOpenWifi() -> a
    boolean isPSKWifi() -> b
    boolean hasRememberPassword() -> c
    boolean isWrongPassworid() -> d
    void updateTitle() -> j
    int compareTo(android.preference.Preference) -> compareTo
    boolean update(android.net.wifi.ScanResult) -> a
    void update(android.net.wifi.WifiInfo,android.net.NetworkInfo$DetailedState) -> a
    int getLevel() -> e
    int getRawLevel() -> f
    android.net.wifi.WifiConfiguration getConfig() -> g
    android.net.wifi.WifiInfo getInfo() -> h
    android.net.NetworkInfo$DetailedState getState() -> i
    java.lang.String removeDoubleQuotes(java.lang.String) -> a
    java.lang.String convertToQuotedString(java.lang.String) -> b
    void setTitle(java.lang.CharSequence) -> setTitle
com.shixunaoyou.wifiscanner.wifi.AccessPoint$PskType -> com.shixunaoyou.wifiscanner.wifi.b:
    com.shixunaoyou.wifiscanner.wifi.AccessPoint$PskType UNKNOWN -> a
    com.shixunaoyou.wifiscanner.wifi.AccessPoint$PskType WPA -> b
    com.shixunaoyou.wifiscanner.wifi.AccessPoint$PskType WPA2 -> c
    com.shixunaoyou.wifiscanner.wifi.AccessPoint$PskType WPA_WPA2 -> d
com.shixunaoyou.wifiscanner.wifi.AdShowDialog -> com.shixunaoyou.wifiscanner.wifi.c:
    android.view.View mContentView -> b
    android.webkit.WebView mAdView -> c
    android.content.Context mContext -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    int getDialogTitle() -> a
com.shixunaoyou.wifiscanner.wifi.AdShowDialog$1 -> com.shixunaoyou.wifiscanner.wifi.d:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.shixunaoyou.wifiscanner.wifi.BootCompletedReceiver -> com.shixunaoyou.wifiscanner.wifi.BootCompletedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.shixunaoyou.wifiscanner.wifi.ConnectionInfoDialog -> com.shixunaoyou.wifiscanner.wifi.e:
    android.view.View mContentView -> b
    android.view.ViewGroup mInfoView -> c
    android.content.Context mContext -> d
    com.shixunaoyou.wifiscanner.update.CheckUpdateAsyncTask$CheckCompletedListener mLogoutListener$6363a7e0 -> e
    android.net.wifi.WifiManager mWifiManager -> f
    android.widget.ImageView mSignalView -> g
    android.view.View mLoginContainer -> h
    android.view.View mLogoutContainer -> i
    android.widget.Button mBackButton3 -> j
    int mLevel -> k
    boolean hasLogin -> l
    void onCreate(android.os.Bundle) -> onCreate
    void setButtonListener(int) -> a
    android.view.View addRow(android.view.ViewGroup,int,java.lang.String) -> a
    java.lang.String combineString(long,int) -> a
    void onClick(android.view.View) -> onClick
    int getDialogTitle() -> a
com.shixunaoyou.wifiscanner.wifi.HotwordHandlerActivity -> com.shixunaoyou.wifiscanner.wifi.HotwordHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.shixunaoyou.wifiscanner.wifi.LoginTask -> com.shixunaoyou.wifiscanner.wifi.f:
    android.content.Context mContext -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifi.ProgressCategory -> com.shixunaoyou.wifiscanner.wifi.ProgressCategory:
    boolean mProgress -> a
    void onBindView(android.view.View) -> onBindView
com.shixunaoyou.wifiscanner.wifi.ServiceNotificationHandler -> com.shixunaoyou.wifiscanner.wifi.g:
    com.shixunaoyou.wifiscanner.wifi.ServiceNotificationHandler mInstance -> a
    android.content.Context mContext -> b
    android.app.Notification mServiceNotification -> c
    boolean isEnableShowNotification -> d
    android.widget.RemoteViews mContentView -> e
    android.app.NotificationManager mNm -> f
    java.lang.String mHotWord -> g
    java.lang.String mMessage -> h
    java.util.List mAllHotwordList -> i
    java.util.Map mAllHotwordMap -> j
    int mHotwordIndex -> k
    com.shixunaoyou.wifiscanner.wifi.ServiceNotificationHandler getInstance(android.content.Context) -> a
    void updateConfigure(boolean) -> a
    void initNotification() -> d
    void setNotificationMessage(java.lang.String) -> a
    void setNotificationHotWord(boolean) -> c
    void updateNotificationMessage(java.lang.String,boolean) -> a
    void updateNotificationHotWord(boolean) -> b
    void updateAllHotword() -> a
    void sendNotification() -> b
    void cancelNotification() -> c
    java.lang.String get(android.content.Context,java.lang.String,android.net.NetworkInfo$DetailedState) -> a
com.shixunaoyou.wifiscanner.wifi.WiFiScanService -> com.shixunaoyou.wifiscanner.wifi.WiFiScanService:
    android.content.IntentFilter mFilter -> a
    android.content.BroadcastReceiver mReceiver -> b
    int mFirstCheckStatus -> c
    boolean mSecondCheckStatus -> d
    java.util.concurrent.atomic.AtomicBoolean mConnected -> e
    android.content.Context mContext -> f
    com.shixunaoyou.wifiscanner.wifi.ServiceNotificationHandler mNotificationHandler -> g
    android.net.wifi.WifiManager mWifiManager -> h
    boolean isStart -> i
    long mLastNotificationUpdateTime -> j
    long mLastHotwordUpdateTime -> k
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService$Scanner mScanner -> l
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void updateNotification() -> a
    void updateAvaibleNetworkNotification() -> b
    void startCheckNetwork() -> c
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.shixunaoyou.wifiscanner.wifi.WiFiScanService) -> a
    void access$1(com.shixunaoyou.wifiscanner.wifi.WiFiScanService,int) -> a
    int access$2(com.shixunaoyou.wifiscanner.wifi.WiFiScanService) -> b
    android.net.wifi.WifiManager access$3(com.shixunaoyou.wifiscanner.wifi.WiFiScanService) -> c
    com.shixunaoyou.wifiscanner.wifi.ServiceNotificationHandler access$4(com.shixunaoyou.wifiscanner.wifi.WiFiScanService) -> d
    void access$5(com.shixunaoyou.wifiscanner.wifi.WiFiScanService,boolean) -> a
    boolean access$6(com.shixunaoyou.wifiscanner.wifi.WiFiScanService) -> e
    void access$7(com.shixunaoyou.wifiscanner.wifi.WiFiScanService) -> f
    void access$8(com.shixunaoyou.wifiscanner.wifi.WiFiScanService) -> g
    void access$9(com.shixunaoyou.wifiscanner.wifi.WiFiScanService,android.content.Intent) -> a
com.shixunaoyou.wifiscanner.wifi.WiFiScanService$1 -> com.shixunaoyou.wifiscanner.wifi.h:
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.shixunaoyou.wifiscanner.wifi.WiFiScanService$DoubleCheck -> com.shixunaoyou.wifiscanner.wifi.i:
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifi.WiFiScanService$HotwordUpdateTask -> com.shixunaoyou.wifiscanner.wifi.j:
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService this$0 -> a
    java.lang.String doInBackground$606be067() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifi.WiFiScanService$Scanner -> com.shixunaoyou.wifiscanner.wifi.k:
    int mRetry -> a
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService this$0 -> b
    void resume() -> a
    void handleMessage(android.os.Message) -> handleMessage
com.shixunaoyou.wifiscanner.wifi.WiFiScanService$ServiceFirstCheckStatus -> com.shixunaoyou.wifiscanner.wifi.l:
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifi.WiFiScanService$ServiceLoginTask -> com.shixunaoyou.wifiscanner.wifi.m:
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService this$0 -> a
    void onPostExecute(java.lang.String) -> a
com.shixunaoyou.wifiscanner.wifi.WiFiScanService$ServiceSecondCheckStatus -> com.shixunaoyou.wifiscanner.wifi.n:
    android.content.Context mMyConext -> a
    com.shixunaoyou.wifiscanner.wifi.WiFiScanService this$0 -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifi.WifiConnectActivity -> com.shixunaoyou.wifiscanner.wifi.WifiConnectActivity:
    android.view.View mPasswordView -> a
    android.widget.Button mConnectButton -> b
    android.widget.TextView mSSIDView -> c
    android.widget.ImageView mWifiSignalView -> d
    com.shixunaoyou.wifiscanner.wifi.AccessPoint mAccessPoint -> e
    android.widget.TextView mWifiInfoView -> f
    android.widget.EditText mPasswordEdit -> g
    android.widget.Button mHaveConnectedButton -> h
    android.widget.Button mForgetButton -> i
    android.view.ViewGroup mConnectInfoContainer -> j
    android.net.wifi.WifiManager mWifiManager -> k
    void onCreate(android.os.Bundle) -> onCreate
    boolean shouldInputPassword() -> c
    void addRow(android.view.ViewGroup,int,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onPause() -> onPause
    int getCustomTitleResecouse() -> a
    int getLayoutRecourse() -> b
com.shixunaoyou.wifiscanner.wifi.WifiDialog -> com.shixunaoyou.wifiscanner.wifi.o:
    boolean edit -> a
    android.content.DialogInterface$OnClickListener mListener -> b
    com.shixunaoyou.wifiscanner.wifi.AccessPoint mAccessPoint -> c
    android.view.View mView -> d
    android.widget.TextView mSsid -> e
    int mSecurity -> f
    android.widget.TextView mPassword -> g
    boolean requireKeyStore$15f751ef() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void addRow(android.view.ViewGroup,int,java.lang.String) -> a
    void validate() -> b
    void onClick(android.view.View) -> onClick
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void showSecurityFields() -> c
com.shixunaoyou.wifiscanner.wifi.WifiFilterDialog -> com.shixunaoyou.wifiscanner.wifi.p:
    android.view.View mContentView -> b
    android.widget.ListView mListView -> c
    com.shixunaoyou.wifiscanner.wifi.WifiFilterDialog$FilterItemAdapter mAdapter -> d
    android.content.Context mParentContext -> e
    com.shixunaoyou.wifiscanner.wifi.WifiFilterDialog$OnWifiFilerChangeListener mListener -> f
    int mLastStatus -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    int getDialogTitle() -> a
com.shixunaoyou.wifiscanner.wifi.WifiFilterDialog$FilterItemAdapter -> com.shixunaoyou.wifiscanner.wifi.q:
    java.lang.String[] mItems -> a
    int[] mIntItems -> b
    android.content.Context mContext -> c
    com.shixunaoyou.wifiscanner.wifi.WifiFilterDialog this$0 -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.shixunaoyou.wifiscanner.wifi.WifiFilterDialog$OnWifiFilerChangeListener -> com.shixunaoyou.wifiscanner.wifi.r:
    void onWifiFilterChanged() -> a
com.shixunaoyou.wifiscanner.wifi.WifiListActivity -> com.shixunaoyou.wifiscanner.wifi.WifiListActivity:
    android.content.IntentFilter mFilter -> a
    android.content.BroadcastReceiver mReceiver -> b
    android.net.wifi.WifiManager mWifiManager -> c
    com.shixunaoyou.wifiscanner.wifi.ProgressCategory mAccessPoints -> d
    com.shixunaoyou.wifiscanner.wifi.AccessPoint mSelectedAccessPoint -> e
    android.net.NetworkInfo$DetailedState mLastState -> f
    android.net.wifi.WifiInfo mLastInfo -> g
    int mLastPriority -> h
    boolean mResetNetworks -> i
    int mKeyStoreNetworkId -> j
    java.util.concurrent.atomic.AtomicBoolean mConnected -> k
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity$Scanner mScanner -> l
    int mFirstCheckStatus -> m
    boolean mSecondCheckStatus -> n
    boolean mIsResumed -> o
    android.content.Context mContext -> p
    android.view.View mLoginStatusContainer -> q
    android.widget.TextView mFilterStatusView -> r
    android.view.View mFilterStatusContainer -> s
    android.widget.TextView mLoginStatusView -> t
    java.lang.String[] mFilterStatus -> u
    int mAlertDialogWidth -> v
    int mAlertDialogHeight -> w
    com.shixunaoyou.wifiscanner.wifi.ServiceNotificationHandler mNotificationHandler -> x
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void startService() -> b
    void onDestroy() -> onDestroy
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void updateNotification() -> c
    void enableNetworks() -> d
    void saveNetworks() -> e
    void updateAccessPoints() -> f
    void updateAccessPoints(int) -> b
    java.util.List getAllAccessPoints() -> g
    void updateConnectionState(android.net.NetworkInfo$DetailedState) -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void connect(int) -> c
    void updateView() -> h
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void doAction(int) -> a
    void login() -> i
    void onWifiFilterChanged() -> a
    void onClick(android.view.View) -> onClick
    android.net.wifi.WifiManager access$0(com.shixunaoyou.wifiscanner.wifi.WifiListActivity) -> a
    android.content.Context access$1(com.shixunaoyou.wifiscanner.wifi.WifiListActivity) -> b
    void access$2(com.shixunaoyou.wifiscanner.wifi.WifiListActivity) -> c
    android.widget.TextView access$3(com.shixunaoyou.wifiscanner.wifi.WifiListActivity) -> d
    void access$4(com.shixunaoyou.wifiscanner.wifi.WifiListActivity,int) -> a
    int access$5(com.shixunaoyou.wifiscanner.wifi.WifiListActivity) -> e
    void access$6(com.shixunaoyou.wifiscanner.wifi.WifiListActivity,boolean) -> a
    boolean access$7(com.shixunaoyou.wifiscanner.wifi.WifiListActivity) -> f
    void access$8(com.shixunaoyou.wifiscanner.wifi.WifiListActivity) -> g
    void access$9(com.shixunaoyou.wifiscanner.wifi.WifiListActivity,android.content.Intent) -> a
com.shixunaoyou.wifiscanner.wifi.WifiListActivity$1 -> com.shixunaoyou.wifiscanner.wifi.s:
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.shixunaoyou.wifiscanner.wifi.WifiListActivity$2 -> com.shixunaoyou.wifiscanner.wifi.t:
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity this$0 -> a
    void run() -> run
com.shixunaoyou.wifiscanner.wifi.WifiListActivity$LogoutTask -> com.shixunaoyou.wifiscanner.wifi.u:
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifi.WifiListActivity$Scanner -> com.shixunaoyou.wifiscanner.wifi.v:
    int mRetry -> a
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity this$0 -> b
    void resume() -> a
    void pause() -> b
    void handleMessage(android.os.Message) -> handleMessage
com.shixunaoyou.wifiscanner.wifi.WifiListActivity$WiFiLoginTask -> com.shixunaoyou.wifiscanner.wifi.w:
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity this$0 -> a
    void onPostExecute(java.lang.String) -> a
    void onPreExecute() -> onPreExecute
com.shixunaoyou.wifiscanner.wifi.WifiListActivity$WifiFirstCheckStatus -> com.shixunaoyou.wifiscanner.wifi.x:
    boolean mIsLogin -> a
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifi.WifiListActivity$WifiSecondCheckStatus -> com.shixunaoyou.wifiscanner.wifi.y:
    android.content.Context mMyConext -> a
    com.shixunaoyou.wifiscanner.wifi.WifiListActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifichest.AppItem -> com.shixunaoyou.wifiscanner.wifichest.a:
    java.lang.String TAG -> a
    java.lang.String ID_KEY -> b
    java.lang.String DESCRIPTION_KEY -> c
    java.lang.String TITLE_KEY -> d
    java.lang.String ICON_URL_KEY -> e
    java.lang.String LONG_KEY -> f
    java.lang.String RANKING_KEY -> g
    java.lang.String DOWNLOAD_COUNT -> h
    java.lang.String UPDATE_TIME -> i
    java.lang.String DOWNLOAD_URL -> j
    java.lang.String VERSION -> k
    android.graphics.drawable.Drawable mAppIcon -> l
    java.lang.String mTitle -> m
    java.lang.String mImageUrl -> n
    java.lang.String mDownloadUrl -> o
    java.lang.String mDescrition -> p
    boolean isPaserSuccessful -> q
    int mDownloadCount -> r
    long mSize -> s
    int mRanking -> t
    com.shixunaoyou.wifiscanner.wifichest.ImageDownloadListener mListener -> u
    java.lang.String mUpdateTime -> v
    java.lang.String mVersion -> w
    java.lang.String mApkName -> x
    boolean mIsDownloading -> y
    java.lang.String mImageLocal -> z
    boolean mIsApkExisted -> A
    int mPercentage -> B
    void checkApkFile() -> s
    boolean isApkExisted() -> a
    boolean isShowDescription() -> b
    boolean isDownloading() -> c
    void setIsDownloading(boolean) -> a
    java.lang.String getDownloadUrl() -> d
    java.lang.String getVersion() -> e
    java.lang.String getUpdateTime() -> f
    android.graphics.drawable.Drawable getAppIcon() -> g
    int getRanking() -> h
    java.lang.String getTitle() -> i
    int getDownload() -> j
    long getSize() -> k
    java.lang.String getDescription() -> l
    int getPercentage() -> m
    void setPercentage(int) -> a
    java.lang.String getApkFullPath() -> n
    java.lang.String getTempApkFullPath() -> o
    void updateStatus() -> p
    void deleteApkFile() -> q
    java.lang.String access$0() -> r
    java.lang.String access$1(com.shixunaoyou.wifiscanner.wifichest.AppItem) -> a
    java.lang.String access$2(com.shixunaoyou.wifiscanner.wifichest.AppItem) -> b
    void access$3(com.shixunaoyou.wifiscanner.wifichest.AppItem,android.graphics.drawable.Drawable) -> a
    com.shixunaoyou.wifiscanner.wifichest.ImageDownloadListener access$4(com.shixunaoyou.wifiscanner.wifichest.AppItem) -> c
com.shixunaoyou.wifiscanner.wifichest.AppItem$ImageDownloadTask -> com.shixunaoyou.wifiscanner.wifichest.b:
    com.shixunaoyou.wifiscanner.wifichest.AppItem this$0 -> a
    java.lang.Integer doInBackground$9ecd34e() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.shixunaoyou.wifiscanner.wifichest.DownloadHandler -> com.shixunaoyou.wifiscanner.wifichest.c:
    com.shixunaoyou.wifiscanner.wifichest.AppItem mItem -> a
    android.view.View mView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mTextView -> d
    java.lang.String mFileFullPath -> e
    java.lang.String mDownloadUrl -> f
    android.view.View mProgressContainer -> g
    android.widget.Button mDownloadButton -> h
    android.content.Context mContext -> i
    void startDownload() -> a
    java.lang.String access$0(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> a
    java.lang.String access$1(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> b
    android.view.View access$2(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> c
    android.widget.Button access$3(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> d
    com.shixunaoyou.wifiscanner.wifichest.AppItem access$4(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> e
    android.content.Context access$5(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> f
    android.widget.ProgressBar access$7(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> g
    android.widget.TextView access$8(com.shixunaoyou.wifiscanner.wifichest.DownloadHandler) -> h
com.shixunaoyou.wifiscanner.wifichest.DownloadHandler$DownloadTask -> com.shixunaoyou.wifiscanner.wifichest.d:
    com.shixunaoyou.wifiscanner.wifichest.DownloadHandler this$0 -> a
    java.lang.Integer doInBackground$9ecd34e() -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.shixunaoyou.wifiscanner.wifichest.ImageDownloadListener -> com.shixunaoyou.wifiscanner.wifichest.e:
    void onImageDowlnloadCompleted() -> a
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity -> com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity:
    java.lang.String TAG -> a
    java.lang.String APP_URL -> b
    android.view.View mLoadingContainer -> c
    android.view.View mListContainer -> d
    android.view.View mRefreshContainer -> e
    java.util.List mAppList -> f
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter mAdapter -> g
    android.widget.Button mRefreshButton -> h
    boolean mPreLoadSuccessfully -> i
    boolean mNeedRefreshData -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean preLoadList() -> d
    void setAdapter() -> e
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    void reloadList() -> f
    void onImageDowlnloadCompleted() -> a
    void onBackPressed() -> onBackPressed
    java.util.List getApplistFromJSONObject(org.json.JSONObject) -> a
    java.util.List access$0(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> a
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter access$1(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> b
    int access$2(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity,int) -> a
    java.lang.String access$3() -> b
    java.lang.String access$4() -> c
    void access$5(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity,boolean) -> a
    java.util.List access$6(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity,org.json.JSONObject) -> a
    android.view.View access$7(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> c
    android.view.View access$8(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> d
    boolean access$9(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> e
    void access$10(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity,java.util.List) -> a
    void access$11(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> f
    android.view.View access$12(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> g
    boolean access$13(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity) -> h
    void access$14(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity,boolean) -> b
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter -> com.shixunaoyou.wifiscanner.wifichest.f:
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity access$0(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter) -> a
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter$1 -> com.shixunaoyou.wifiscanner.wifichest.g:
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter this$1 -> a
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder val$holder -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter access$0(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter$1) -> a
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter$1$1 -> com.shixunaoyou.wifiscanner.wifichest.h:
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter$1 this$2 -> a
    int val$position -> b
    void run() -> run
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter$2 -> com.shixunaoyou.wifiscanner.wifichest.i:
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter$3 -> com.shixunaoyou.wifiscanner.wifichest.j:
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemAdapter this$1 -> a
    int val$position -> b
    android.view.View val$convertView -> c
    void onClick(android.view.View) -> onClick
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder -> com.shixunaoyou.wifiscanner.wifichest.k:
    android.widget.ImageView mIcon -> a
    android.widget.TextView mTitle -> b
    android.widget.ImageView mRanking -> c
    android.widget.TextView mDownloadCount -> d
    android.widget.Button mDownloadButton -> e
    android.widget.Button mInstallButton -> f
    android.widget.Button mDeleteButton -> g
    android.widget.Button mRedownloadButton -> h
    android.widget.TextView mSize -> i
    android.widget.TextView mDescription -> j
    android.widget.ProgressBar mProgressBar -> k
    android.widget.TextView mProgressValue -> l
    android.view.View mHideContainer -> m
    android.widget.TextView mUpdateView -> n
    android.widget.TextView mVersionView -> o
    android.view.View mProgressContainer -> p
    android.view.View mButtonContainer -> q
    android.widget.ImageView mArrow -> r
    android.widget.Button access$0(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> a
    android.widget.Button access$1(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> b
    void access$3(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.TextView) -> a
    void access$4(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.Button) -> a
    void access$5(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.TextView) -> b
    void access$6(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.ImageView) -> a
    void access$7(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.ProgressBar) -> a
    void access$8(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.TextView) -> c
    void access$9(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.TextView) -> d
    void access$10(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.ImageView) -> b
    void access$11(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.TextView) -> e
    void access$12(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.view.View) -> a
    void access$13(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.TextView) -> f
    void access$14(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.TextView) -> g
    void access$15(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.view.View) -> b
    void access$16(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.ImageView) -> c
    void access$17(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.Button) -> b
    void access$18(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.view.View) -> c
    void access$19(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.Button) -> c
    void access$20(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder,android.widget.Button) -> d
    android.view.View access$21(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> c
    android.widget.ImageView access$22(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> d
    android.widget.Button access$23(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> e
    android.widget.Button access$24(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> f
    android.widget.TextView access$25(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> g
    android.widget.TextView access$26(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> h
    android.widget.ImageView access$27(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> i
    android.widget.TextView access$28(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> j
    android.widget.TextView access$29(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> k
    android.widget.TextView access$30(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> l
    android.widget.ImageView access$31(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> m
    android.view.View access$32(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> n
    android.widget.TextView access$33(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> o
    android.view.View access$34(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> p
    android.widget.ProgressBar access$35(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> q
    android.widget.TextView access$36(com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$AppItemViewHolder) -> r
com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity$LoadProcossTask -> com.shixunaoyou.wifiscanner.wifichest.l:
    com.shixunaoyou.wifiscanner.wifichest.WifiChestActivity this$0 -> a
    java.util.List doInBackground$68cf9880() -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sun.activation.registries.LineTokenizer -> com.sun.a.a.a:
    int currentPosition -> a
    int maxPosition -> b
    java.lang.String str -> c
    java.util.Vector stack -> d
    void skipWhiteSpace() -> c
    boolean hasMoreTokens() -> a
    java.lang.String nextToken() -> b
com.sun.activation.registries.LogSupport -> com.sun.a.a.b:
    boolean debug -> a
    java.util.logging.Logger logger -> b
    java.util.logging.Level level -> c
    void log(java.lang.String) -> a
    void log(java.lang.String,java.lang.Throwable) -> a
    boolean isLoggable() -> a
com.sun.activation.registries.MailcapFile -> com.sun.a.a.c:
    java.util.Map type_hash -> a
    java.util.Map fallback_hash -> b
    java.util.Map native_commands -> c
    boolean addReverse -> d
    java.util.Map getMailcapList(java.lang.String) -> a
    java.util.Map getMailcapFallbackList(java.lang.String) -> b
    java.lang.String[] getMimeTypes() -> a
    java.lang.String[] getNativeCommands(java.lang.String) -> c
    java.util.Map mergeResults(java.util.Map,java.util.Map) -> a
    void appendToMailcap(java.lang.String) -> d
    void parse(java.io.Reader) -> a
    void parseLine(java.lang.String) -> e
    void reportParseError(int,int,java.lang.String) -> a
    void reportParseError(int,int,int,java.lang.String) -> a
com.sun.activation.registries.MailcapParseException -> com.sun.a.a.d:
com.sun.activation.registries.MailcapTokenizer -> com.sun.a.a.e:
    java.lang.String data -> a
    int dataIndex -> b
    int dataLength -> c
    int currentToken -> d
    java.lang.String currentTokenValue -> e
    boolean isAutoquoting -> f
    char autoquoteChar -> g
    void setIsAutoquoting(boolean) -> a
    java.lang.String nameForToken(int) -> a
    java.lang.String getCurrentTokenValue() -> a
    int nextToken() -> b
    void processStringToken() -> c
    void processAutoquoteToken() -> d
    boolean isStringTokenChar(char) -> a
com.sun.activation.registries.MimeTypeEntry -> com.sun.a.a.f:
    java.lang.String type -> a
    java.lang.String extension -> b
    java.lang.String getMIMEType() -> a
    java.lang.String toString() -> toString
com.sun.activation.registries.MimeTypeFile -> com.sun.a.a.g:
    java.lang.String fname -> a
    java.util.Hashtable type_hash -> b
    java.lang.String getMIMETypeString(java.lang.String) -> a
    void appendToRegistry(java.lang.String) -> b
    void parse(java.io.BufferedReader) -> a
    void parseEntry(java.lang.String) -> c
com.sun.mail.dsn.DeliveryStatus -> com.sun.mail.dsn.DeliveryStatus:
    boolean debug -> debug
    javax.mail.internet.InternetHeaders messageDSN -> messageDSN
    javax.mail.internet.InternetHeaders[] recipientDSN -> recipientDSN
    javax.mail.internet.InternetHeaders getMessageDSN() -> getMessageDSN
    void setMessageDSN(javax.mail.internet.InternetHeaders) -> setMessageDSN
    int getRecipientDSNCount() -> getRecipientDSNCount
    javax.mail.internet.InternetHeaders getRecipientDSN(int) -> getRecipientDSN
    void addRecipientDSN(javax.mail.internet.InternetHeaders) -> addRecipientDSN
    void writeTo(java.io.OutputStream) -> writeTo
    void writeInternetHeaders(javax.mail.internet.InternetHeaders,com.sun.mail.util.LineOutputStream) -> writeInternetHeaders
    java.lang.String toString() -> toString
com.sun.mail.dsn.MessageHeaders -> com.sun.mail.dsn.MessageHeaders:
    int getSize() -> getSize
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
com.sun.mail.dsn.MultipartReport -> com.sun.mail.dsn.MultipartReport:
    boolean constructed -> constructed
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    javax.mail.internet.MimeBodyPart getTextBodyPart() -> getTextBodyPart
    void setTextBodyPart(javax.mail.internet.MimeBodyPart) -> setTextBodyPart
    com.sun.mail.dsn.DeliveryStatus getDeliveryStatus() -> getDeliveryStatus
    void setDeliveryStatus(com.sun.mail.dsn.DeliveryStatus) -> setDeliveryStatus
    javax.mail.internet.MimeMessage getReturnedMessage() -> getReturnedMessage
    void setReturnedMessage(javax.mail.internet.MimeMessage) -> setReturnedMessage
    void setBodyPart(javax.mail.BodyPart,int) -> setBodyPart
    void setSubType(java.lang.String) -> setSubType
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
com.sun.mail.dsn.message_deliverystatus -> com.sun.mail.dsn.message_deliverystatus:
    javax.activation.ActivationDataFlavor ourDataFlavor -> ourDataFlavor
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.dsn.multipart_report -> com.sun.mail.dsn.multipart_report:
    javax.activation.ActivationDataFlavor myDF -> myDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.dsn.text_rfc822headers -> com.sun.mail.dsn.text_rfc822headers:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor myDFs -> myDFs
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    java.lang.Object getStringContent(javax.activation.DataSource) -> getStringContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
    java.lang.String getCharset(java.lang.String) -> getCharset
com.sun.mail.handlers.message_rfc822 -> com.sun.mail.handlers.message_rfc822:
    javax.activation.ActivationDataFlavor ourDataFlavor -> ourDataFlavor
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.handlers.multipart_mixed -> com.sun.mail.handlers.multipart_mixed:
    javax.activation.ActivationDataFlavor myDF -> myDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
com.sun.mail.handlers.text_html -> com.sun.mail.handlers.text_html:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
com.sun.mail.handlers.text_plain -> com.sun.mail.handlers.text_plain:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
    java.lang.String getCharset(java.lang.String) -> getCharset
com.sun.mail.handlers.text_xml -> com.sun.mail.handlers.text_xml:
    javax.activation.ActivationDataFlavor myDF -> myDF
    javax.activation.ActivationDataFlavor getDF() -> getDF
com.sun.mail.smtp.DigestMD5 -> com.sun.mail.smtp.DigestMD5:
    java.io.PrintStream debugout -> debugout
    java.security.MessageDigest md5 -> md5
    java.lang.String uri -> uri
    java.lang.String clientResponse -> clientResponse
    char[] digits -> digits
    byte[] authClient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> authClient
    boolean authServer(java.lang.String) -> authServer
    java.util.Hashtable tokenize(java.lang.String) -> tokenize
    java.lang.String toHex(byte[]) -> toHex
com.sun.mail.smtp.SMTPAddressFailedException -> com.sun.mail.smtp.SMTPAddressFailedException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.InternetAddress getAddress() -> getAddress
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPAddressSucceededException -> com.sun.mail.smtp.SMTPAddressSucceededException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.InternetAddress getAddress() -> getAddress
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPMessage -> com.sun.mail.smtp.SMTPMessage:
    int NOTIFY_NEVER -> NOTIFY_NEVER
    int NOTIFY_SUCCESS -> NOTIFY_SUCCESS
    int NOTIFY_FAILURE -> NOTIFY_FAILURE
    int NOTIFY_DELAY -> NOTIFY_DELAY
    int RETURN_FULL -> RETURN_FULL
    int RETURN_HDRS -> RETURN_HDRS
    java.lang.String[] returnOptionString -> returnOptionString
    java.lang.String envelopeFrom -> envelopeFrom
    int notifyOptions -> notifyOptions
    int returnOption -> returnOption
    boolean sendPartial -> sendPartial
    boolean allow8bitMIME -> allow8bitMIME
    java.lang.String submitter -> submitter
    java.lang.String extension -> extension
    void setEnvelopeFrom(java.lang.String) -> setEnvelopeFrom
    java.lang.String getEnvelopeFrom() -> getEnvelopeFrom
    void setNotifyOptions(int) -> setNotifyOptions
    int getNotifyOptions() -> getNotifyOptions
    java.lang.String getDSNNotify() -> getDSNNotify
    void setReturnOption(int) -> setReturnOption
    int getReturnOption() -> getReturnOption
    java.lang.String getDSNRet() -> getDSNRet
    void setAllow8bitMIME(boolean) -> setAllow8bitMIME
    boolean getAllow8bitMIME() -> getAllow8bitMIME
    void setSendPartial(boolean) -> setSendPartial
    boolean getSendPartial() -> getSendPartial
    java.lang.String getSubmitter() -> getSubmitter
    void setSubmitter(java.lang.String) -> setSubmitter
    java.lang.String getMailExtension() -> getMailExtension
    void setMailExtension(java.lang.String) -> setMailExtension
com.sun.mail.smtp.SMTPOutputStream -> com.sun.mail.smtp.SMTPOutputStream:
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void ensureAtBOL() -> ensureAtBOL
com.sun.mail.smtp.SMTPSSLTransport -> com.sun.mail.smtp.SMTPSSLTransport:
com.sun.mail.smtp.SMTPSendFailedException -> com.sun.mail.smtp.SMTPSendFailedException:
    javax.mail.internet.InternetAddress addr -> addr
    java.lang.String cmd -> cmd
    int rc -> rc
    long serialVersionUID -> serialVersionUID
    java.lang.String getCommand() -> getCommand
    int getReturnCode() -> getReturnCode
com.sun.mail.smtp.SMTPTransport -> com.sun.mail.smtp.SMTPTransport:
    java.lang.String name -> name
    int defaultPort -> defaultPort
    boolean isSSL -> isSSL
    javax.mail.internet.MimeMessage message -> message
    javax.mail.Address[] addresses -> addresses
    javax.mail.Address[] validSentAddr -> validSentAddr
    javax.mail.Address[] validUnsentAddr -> validUnsentAddr
    javax.mail.Address[] invalidAddr -> invalidAddr
    boolean sendPartiallyFailed -> sendPartiallyFailed
    javax.mail.MessagingException exception -> exception
    com.sun.mail.smtp.SMTPOutputStream dataStream -> dataStream
    java.util.Hashtable extMap -> extMap
    boolean quitWait -> quitWait
    java.lang.String saslRealm -> saslRealm
    boolean reportSuccess -> reportSuccess
    boolean useStartTLS -> useStartTLS
    boolean useRset -> useRset
    java.io.PrintStream out -> out
    java.lang.String localHostName -> localHostName
    java.lang.String lastServerResponse -> lastServerResponse
    int lastReturnCode -> lastReturnCode
    java.lang.String[] ignoreList -> ignoreList
    byte[] CRLF -> CRLF
    java.lang.String UNKNOWN -> UNKNOWN
    com.sun.mail.smtp.DigestMD5 md5support -> md5support
    java.io.BufferedInputStream serverInput -> serverInput
    com.sun.mail.util.LineInputStream lineInputStream -> lineInputStream
    java.io.OutputStream serverOutput -> serverOutput
    java.net.Socket serverSocket -> serverSocket
    char[] hexchar -> hexchar
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String getLocalHost() -> getLocalHost
    void setLocalHost(java.lang.String) -> setLocalHost
    void connect(java.net.Socket) -> connect
    java.lang.String getSASLRealm() -> getSASLRealm
    void setSASLRealm(java.lang.String) -> setSASLRealm
    boolean getReportSuccess() -> getReportSuccess
    void setReportSuccess(boolean) -> setReportSuccess
    boolean getStartTLS() -> getStartTLS
    void setStartTLS(boolean) -> setStartTLS
    boolean getUseRset() -> getUseRset
    void setUseRset(boolean) -> setUseRset
    java.lang.String getLastServerResponse() -> getLastServerResponse
    int getLastReturnCode() -> getLastReturnCode
    com.sun.mail.smtp.DigestMD5 getMD5() -> getMD5
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    void sendMessage(javax.mail.Message,javax.mail.Address[]) -> sendMessage
    void close() -> close
    void closeConnection() -> closeConnection
    boolean isConnected() -> isConnected
    void expandGroups() -> expandGroups
    boolean convertTo8Bit(javax.mail.internet.MimePart) -> convertTo8Bit
    boolean is8Bit(java.io.InputStream) -> is8Bit
    void finalize() -> finalize
    void helo(java.lang.String) -> helo
    boolean ehlo(java.lang.String) -> ehlo
    void mailFrom() -> mailFrom
    void rcptTo() -> rcptTo
    java.io.OutputStream data() -> data
    void finishData() -> finishData
    void startTLS() -> startTLS
    void openServer(java.lang.String,int) -> openServer
    void openServer() -> openServer
    void initStreams() -> initStreams
    void issueCommand(java.lang.String,int) -> issueCommand
    void issueSendCommand(java.lang.String,int) -> issueSendCommand
    int simpleCommand(java.lang.String) -> simpleCommand
    int simpleCommand(byte[]) -> simpleCommand
    void sendCommand(java.lang.String) -> sendCommand
    void sendCommand(byte[]) -> sendCommand
    int readServerResponse() -> readServerResponse
    void checkConnected() -> checkConnected
    boolean isNotLastLine(java.lang.String) -> isNotLastLine
    java.lang.String normalizeAddress(java.lang.String) -> normalizeAddress
    boolean supportsExtension(java.lang.String) -> supportsExtension
    java.lang.String getExtensionParameter(java.lang.String) -> getExtensionParameter
    boolean supportsAuthentication(java.lang.String) -> supportsAuthentication
    java.lang.String xtext(java.lang.String) -> xtext
com.sun.mail.util.ASCIIUtility -> com.sun.mail.util.ASCIIUtility:
    int parseInt(byte[],int,int,int) -> parseInt
    int parseInt(byte[],int,int) -> parseInt
    long parseLong(byte[],int,int,int) -> parseLong
    long parseLong(byte[],int,int) -> parseLong
    java.lang.String toString(byte[],int,int) -> toString
    java.lang.String toString(java.io.ByteArrayInputStream) -> toString
    byte[] getBytes(java.lang.String) -> getBytes
    byte[] getBytes(java.io.InputStream) -> getBytes
com.sun.mail.util.BASE64DecoderStream -> com.sun.mail.util.BASE64DecoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    int index -> index
    byte[] input_buffer -> input_buffer
    int input_pos -> input_pos
    int input_len -> input_len
    boolean ignoreErrors -> ignoreErrors
    char[] pem_array -> pem_array
    byte[] pem_convert_array -> pem_convert_array
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
    int decode(byte[],int,int) -> decode
    int getByte() -> getByte
    java.lang.String recentChars() -> recentChars
    byte[] decode(byte[]) -> decode
com.sun.mail.util.BASE64EncoderStream -> com.sun.mail.util.BASE64EncoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    byte[] outbuf -> outbuf
    int count -> count
    int bytesPerLine -> bytesPerLine
    int lineLimit -> lineLimit
    boolean noCRLF -> noCRLF
    byte[] newline -> newline
    char[] pem_array -> pem_array
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void encode() -> encode
    byte[] encode(byte[]) -> encode
    byte[] encode(byte[],int,int,byte[]) -> encode
    int encodedSize(int) -> encodedSize
com.sun.mail.util.BEncoderStream -> com.sun.mail.util.BEncoderStream:
    int encodedLength(byte[]) -> encodedLength
com.sun.mail.util.CRLFOutputStream -> com.sun.mail.util.CRLFOutputStream:
    int lastb -> lastb
    boolean atBOL -> atBOL
    byte[] newline -> newline
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeln() -> writeln
com.sun.mail.util.FolderClosedIOException -> com.sun.mail.util.FolderClosedIOException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
com.sun.mail.util.LineInputStream -> com.sun.mail.util.LineInputStream:
    char[] lineBuffer -> lineBuffer
    java.lang.String readLine() -> readLine
com.sun.mail.util.LineOutputStream -> com.sun.mail.util.LineOutputStream:
    byte[] newline -> newline
    void writeln(java.lang.String) -> writeln
    void writeln() -> writeln
com.sun.mail.util.MessageRemovedIOException -> com.sun.mail.util.MessageRemovedIOException:
    long serialVersionUID -> serialVersionUID
com.sun.mail.util.QDecoderStream -> com.sun.mail.util.QDecoderStream:
    int read() -> read
com.sun.mail.util.QEncoderStream -> com.sun.mail.util.QEncoderStream:
    java.lang.String specials -> specials
    java.lang.String WORD_SPECIALS -> WORD_SPECIALS
    java.lang.String TEXT_SPECIALS -> TEXT_SPECIALS
    void write(int) -> write
    int encodedLength(byte[],boolean) -> encodedLength
com.sun.mail.util.QPDecoderStream -> com.sun.mail.util.QPDecoderStream:
    byte[] ba -> ba
    int spaces -> spaces
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
com.sun.mail.util.QPEncoderStream -> com.sun.mail.util.QPEncoderStream:
    int count -> count
    int bytesPerLine -> bytesPerLine
    boolean gotSpace -> gotSpace
    boolean gotCR -> gotCR
    char[] hex -> hex
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void outputCRLF() -> outputCRLF
    void output(int,boolean) -> output
com.sun.mail.util.SocketFetcher -> com.sun.mail.util.SocketFetcher:
    java.net.Socket getSocket(java.lang.String,int,java.util.Properties,java.lang.String,boolean) -> getSocket
    java.net.Socket getSocket(java.lang.String,int,java.util.Properties,java.lang.String) -> getSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.lang.String,int,int,javax.net.SocketFactory,boolean) -> createSocket
    javax.net.SocketFactory getSocketFactory(java.lang.String) -> getSocketFactory
    java.net.Socket startTLS(java.net.Socket) -> startTLS
    java.net.Socket startTLS(java.net.Socket,java.util.Properties,java.lang.String) -> startTLS
    void configureSSLSocket(java.net.Socket,java.util.Properties,java.lang.String) -> configureSSLSocket
    java.lang.String[] stringArray(java.lang.String) -> stringArray
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
com.sun.mail.util.SocketFetcher$1 -> com.sun.mail.util.SocketFetcher$1:
    java.lang.Object run() -> run
com.sun.mail.util.TraceInputStream -> com.sun.mail.util.TraceInputStream:
    boolean trace -> trace
    boolean quote -> quote
    java.io.OutputStream traceOut -> traceOut
    void setTrace(boolean) -> setTrace
    void setQuote(boolean) -> setQuote
    int read() -> read
    int read(byte[],int,int) -> read
    void writeByte(int) -> writeByte
com.sun.mail.util.TraceOutputStream -> com.sun.mail.util.TraceOutputStream:
    boolean trace -> trace
    boolean quote -> quote
    java.io.OutputStream traceOut -> traceOut
    void setTrace(boolean) -> setTrace
    void setQuote(boolean) -> setQuote
    void write(int) -> write
    void write(byte[],int,int) -> write
    void writeByte(int) -> writeByte
com.sun.mail.util.UUDecoderStream -> com.sun.mail.util.UUDecoderStream:
    java.lang.String name -> name
    int mode -> mode
    byte[] buffer -> buffer
    int bufsize -> bufsize
    int index -> index
    boolean gotPrefix -> gotPrefix
    boolean gotEnd -> gotEnd
    com.sun.mail.util.LineInputStream lin -> lin
    int read() -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
    java.lang.String getName() -> getName
    int getMode() -> getMode
    void readPrefix() -> readPrefix
    boolean decode() -> decode
com.sun.mail.util.UUEncoderStream -> com.sun.mail.util.UUEncoderStream:
    byte[] buffer -> buffer
    int bufsize -> bufsize
    boolean wrotePrefix -> wrotePrefix
    java.lang.String name -> name
    int mode -> mode
    void setNameMode(java.lang.String,int) -> setNameMode
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
    void writePrefix() -> writePrefix
    void writeSuffix() -> writeSuffix
    void encode() -> encode
com.umeng.analytics.MobclickAgent -> com.a.a.a:
    com.umeng.analytics.b a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void onError$faab20d() -> a
    void onEvent(android.content.Context,java.lang.String) -> a
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> a
com.umeng.analytics.a -> com.a.a.b:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    com.umeng.analytics.h b -> b
    android.content.Context c -> c
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.h) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.umeng.analytics.a.a -> com.a.a.a.a:
    java.util.HashMap a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.b -> com.a.a.a.b:
    java.lang.String a -> a
    java.util.ArrayList b -> b
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.b) -> a
com.umeng.analytics.a.c -> com.a.a.a.c:
    com.umeng.analytics.a.a a -> a
com.umeng.analytics.a.d -> com.a.a.a.d:
    java.lang.String a -> a
    java.lang.String a(java.lang.Throwable) -> a
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.e -> com.a.a.a.e:
    java.lang.String a -> d
    java.lang.String b -> e
    int c -> f
    long d -> g
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.f -> com.a.a.a.f:
    java.lang.String a -> h
    java.lang.String b -> i
    java.lang.String c -> j
    java.lang.String d -> a
    java.lang.String e -> k
    long f -> b
    java.lang.String g -> c
    java.lang.String h -> l
    java.lang.String i -> d
    java.lang.String j -> m
    java.lang.String k -> n
    java.lang.String n -> e
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> f
    java.lang.String r -> g
    int s -> q
    java.lang.String t -> r
    java.lang.String u -> s
    java.lang.String v -> t
    java.lang.String w -> u
    java.lang.String x -> v
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void b(android.content.Context,java.lang.String[]) -> a
    boolean b() -> b
com.umeng.analytics.a.g -> com.a.a.a.g:
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.h -> com.a.a.a.h:
    com.umeng.analytics.a.o a -> d
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.i -> com.a.a.a.i:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.e) -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.i) -> a
    int b() -> b
    void c() -> c
com.umeng.analytics.a.j -> com.a.a.a.j:
    com.umeng.analytics.a.g a -> a
com.umeng.analytics.a.k -> com.a.a.a.k:
    java.lang.String a -> a
    int b -> b
com.umeng.analytics.a.l -> com.a.a.a.l:
    java.lang.String e -> a
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.m -> com.a.a.a.m:
    com.umeng.analytics.a.o a -> d
    com.umeng.analytics.a.p b -> e
    long c -> f
    java.util.ArrayList d -> g
    com.umeng.analytics.a.m a(android.content.Context) -> a
    java.util.ArrayList c(android.content.SharedPreferences) -> a
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.n -> com.a.a.a.n:
    java.lang.String g -> b
    java.lang.String h -> c
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.o -> com.a.a.a.o:
    double a -> a
    double b -> b
    long c -> c
    android.content.SharedPreferences$Editor a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.location.Location,android.content.SharedPreferences) -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
    boolean a() -> a
com.umeng.analytics.a.p -> com.a.a.a.p:
    long a -> a
    long b -> b
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    com.umeng.analytics.a.p a(android.content.Context) -> a
com.umeng.analytics.b -> com.a.a.c:
    java.lang.String l -> d
    java.lang.String m -> e
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void i(android.content.Context) -> c
    void j(android.content.Context) -> d
    void b(android.content.Context,java.lang.Throwable) -> a
    void a(com.umeng.analytics.b,android.content.Context) -> a
    void b(com.umeng.analytics.b,android.content.Context) -> b
com.umeng.analytics.b$a -> com.a.a.d:
    java.lang.Object b -> a
    android.content.Context c -> b
    int d -> c
    com.umeng.analytics.b a -> d
    void run() -> run
com.umeng.analytics.c -> com.a.a.e:
    com.umeng.analytics.a.i a -> a
    int d -> b
    int a() -> a
    boolean b() -> b
    void a(java.lang.String,java.lang.String,java.lang.String,long,int) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    boolean c() -> c
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    org.json.JSONObject d() -> d
    void e() -> e
    android.content.SharedPreferences c(android.content.Context) -> c
    android.content.SharedPreferences e(android.content.Context) -> d
    java.lang.String g(android.content.Context) -> e
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void j(android.content.Context) -> f
com.umeng.analytics.d -> com.a.a.f:
    com.umeng.analytics.a a -> d
    java.lang.Object b -> e
    android.os.Handler l -> f
    com.umeng.analytics.c c -> a
    com.umeng.analytics.a.f d -> b
    int o -> g
    long p -> h
    long q -> i
    long r -> j
    java.lang.String j -> k
    java.lang.String k -> c
    boolean s -> l
    void a(android.content.Context,int) -> a
    java.lang.String c(android.content.Context) -> a
    org.json.JSONObject g(android.content.Context) -> b
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    java.lang.Object a(com.umeng.analytics.d) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
com.umeng.analytics.d$a -> com.a.a.g:
    android.content.Context b -> a
    com.umeng.analytics.d a -> b
    void run() -> run
com.umeng.analytics.d$b -> com.a.a.h:
    android.content.Context b -> a
    com.umeng.analytics.d a -> b
    void run() -> run
com.umeng.analytics.e -> com.a.a.i:
    com.umeng.analytics.d a -> a
com.umeng.analytics.f -> com.a.a.j:
    long d -> a
    long g -> b
    int h -> c
    boolean i -> d
    boolean j -> e
    java.lang.String[] r -> f
    boolean t -> g
com.umeng.analytics.g -> com.a.a.k:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
com.umeng.analytics.h -> com.a.a.l:
    void b(android.content.Context,java.lang.Throwable) -> a
com.umeng.analytics.onlineconfig.a -> com.a.a.b.a:
com.umeng.common.Log -> com.a.b.a:
    boolean LOG -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> c
com.umeng.common.b -> com.a.b.b:
    java.lang.String a -> a
    java.lang.String d(android.content.Context) -> a
    java.lang.String e(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String g(android.content.Context) -> c
    java.lang.String h(android.content.Context) -> d
    java.lang.String[] k(android.content.Context) -> e
    boolean l(android.content.Context) -> f
    android.location.Location m(android.content.Context) -> g
    boolean n(android.content.Context) -> h
    int o(android.content.Context) -> i
    java.lang.String[] p(android.content.Context) -> j
    java.util.Locale y(android.content.Context) -> q
    java.lang.String q(android.content.Context) -> k
    java.lang.String r(android.content.Context) -> l
    java.lang.String s(android.content.Context) -> m
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String t(android.content.Context) -> n
    java.lang.String a(java.util.Date) -> a
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
com.umeng.common.util.f -> com.a.b.a.a:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
com.umeng.common.util.g -> com.a.b.a.b:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a() -> a
javax.activation.ActivationDataFlavor -> javax.activation.ActivationDataFlavor:
    java.lang.String mimeType -> mimeType
    javax.activation.MimeType mimeObject -> mimeObject
    java.lang.String humanPresentableName -> humanPresentableName
    java.lang.Class representationClass -> representationClass
    java.lang.String getMimeType() -> getMimeType
    java.lang.Class getRepresentationClass() -> getRepresentationClass
    java.lang.String getHumanPresentableName() -> getHumanPresentableName
    void setHumanPresentableName(java.lang.String) -> setHumanPresentableName
    boolean equals(myjava.awt.datatransfer.DataFlavor) -> equals
    boolean isMimeTypeEqual(java.lang.String) -> isMimeTypeEqual
    java.lang.String normalizeMimeTypeParameter(java.lang.String,java.lang.String) -> normalizeMimeTypeParameter
    java.lang.String normalizeMimeType(java.lang.String) -> normalizeMimeType
javax.activation.CommandInfo -> javax.activation.CommandInfo:
    java.lang.String verb -> verb
    java.lang.String className -> className
    java.lang.String getCommandName() -> getCommandName
    java.lang.String getCommandClass() -> getCommandClass
    java.lang.Object getCommandObject(javax.activation.DataHandler,java.lang.ClassLoader) -> getCommandObject
javax.activation.CommandMap -> javax.activation.CommandMap:
    javax.activation.CommandMap defaultCommandMap -> defaultCommandMap
    javax.activation.CommandMap getDefaultCommandMap() -> getDefaultCommandMap
    void setDefaultCommandMap(javax.activation.CommandMap) -> setDefaultCommandMap
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String) -> getPreferredCommands
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String,javax.activation.DataSource) -> getPreferredCommands
    javax.activation.CommandInfo[] getAllCommands(java.lang.String) -> getAllCommands
    javax.activation.CommandInfo[] getAllCommands(java.lang.String,javax.activation.DataSource) -> getAllCommands
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String) -> getCommand
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String,javax.activation.DataSource) -> getCommand
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String,javax.activation.DataSource) -> createDataContentHandler
    java.lang.String[] getMimeTypes() -> getMimeTypes
javax.activation.CommandObject -> javax.activation.CommandObject:
    void setCommandContext(java.lang.String,javax.activation.DataHandler) -> setCommandContext
javax.activation.DataContentHandler -> javax.activation.DataContentHandler:
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.DataContentHandlerFactory -> javax.activation.DataContentHandlerFactory:
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
javax.activation.DataHandler -> javax.activation.DataHandler:
    javax.activation.DataSource dataSource -> dataSource
    javax.activation.DataSource objDataSource -> objDataSource
    java.lang.Object object -> object
    java.lang.String objectMimeType -> objectMimeType
    javax.activation.CommandMap currentCommandMap -> currentCommandMap
    myjava.awt.datatransfer.DataFlavor[] emptyFlavors -> emptyFlavors
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    javax.activation.DataContentHandler dataContentHandler -> dataContentHandler
    javax.activation.DataContentHandler factoryDCH -> factoryDCH
    javax.activation.DataContentHandlerFactory factory -> factory
    javax.activation.DataContentHandlerFactory oldFactory -> oldFactory
    java.lang.String shortType -> shortType
    javax.activation.CommandMap getCommandMap() -> getCommandMap
    javax.activation.DataSource getDataSource() -> getDataSource
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.OutputStream getOutputStream() -> getOutputStream
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    boolean isDataFlavorSupported(myjava.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor) -> getTransferData
    void setCommandMap(javax.activation.CommandMap) -> setCommandMap
    javax.activation.CommandInfo[] getPreferredCommands() -> getPreferredCommands
    javax.activation.CommandInfo[] getAllCommands() -> getAllCommands
    javax.activation.CommandInfo getCommand(java.lang.String) -> getCommand
    java.lang.Object getContent() -> getContent
    java.lang.Object getBean(javax.activation.CommandInfo) -> getBean
    javax.activation.DataContentHandler getDataContentHandler() -> getDataContentHandler
    java.lang.String getBaseType() -> getBaseType
    void setDataContentHandlerFactory(javax.activation.DataContentHandlerFactory) -> setDataContentHandlerFactory
    java.lang.Object access$0(javax.activation.DataHandler) -> access$0
    java.lang.String access$1(javax.activation.DataHandler) -> access$1
javax.activation.DataHandler$1 -> javax.activation.DataHandler$1:
    javax.activation.DataHandler this$0 -> this$0
    java.io.PipedOutputStream val$pos -> val$pos
    javax.activation.DataContentHandler val$fdch -> val$fdch
    void run() -> run
javax.activation.DataHandlerDataSource -> javax.activation.DataHandlerDataSource:
    javax.activation.DataHandler dataHandler -> dataHandler
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
javax.activation.DataSource -> javax.activation.DataSource:
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
javax.activation.DataSourceDataContentHandler -> javax.activation.DataSourceDataContentHandler:
    javax.activation.DataSource ds -> ds
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    javax.activation.DataContentHandler dch -> dch
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.FileDataSource -> javax.activation.FileDataSource:
    java.io.File _file -> _file
    javax.activation.FileTypeMap typeMap -> typeMap
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    java.io.File getFile() -> getFile
    void setFileTypeMap(javax.activation.FileTypeMap) -> setFileTypeMap
javax.activation.FileTypeMap -> javax.activation.FileTypeMap:
    javax.activation.FileTypeMap defaultMap -> defaultMap
    java.lang.String getContentType(java.io.File) -> getContentType
    java.lang.String getContentType(java.lang.String) -> getContentType
    void setDefaultFileTypeMap(javax.activation.FileTypeMap) -> setDefaultFileTypeMap
    javax.activation.FileTypeMap getDefaultFileTypeMap() -> getDefaultFileTypeMap
javax.activation.MailcapCommandMap -> javax.activation.MailcapCommandMap:
    com.sun.activation.registries.MailcapFile defDB -> defDB
    com.sun.activation.registries.MailcapFile[] DB -> DB
    int PROG -> PROG
    com.sun.activation.registries.MailcapFile loadResource(java.lang.String) -> loadResource
    void loadAllResources(java.util.List,java.lang.String) -> loadAllResources
    com.sun.activation.registries.MailcapFile loadFile(java.lang.String) -> loadFile
    javax.activation.CommandInfo[] getPreferredCommands(java.lang.String) -> getPreferredCommands
    void appendPrefCmdsToList(java.util.Map,java.util.List) -> appendPrefCmdsToList
    boolean checkForVerb(java.util.List,java.lang.String) -> checkForVerb
    javax.activation.CommandInfo[] getAllCommands(java.lang.String) -> getAllCommands
    void appendCmdsToList(java.util.Map,java.util.List) -> appendCmdsToList
    javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String) -> getCommand
    void addMailcap(java.lang.String) -> addMailcap
    javax.activation.DataContentHandler createDataContentHandler(java.lang.String) -> createDataContentHandler
    javax.activation.DataContentHandler getDataContentHandler(java.lang.String) -> getDataContentHandler
    java.lang.String[] getMimeTypes() -> getMimeTypes
    java.lang.String[] getNativeCommands(java.lang.String) -> getNativeCommands
javax.activation.MimeType -> javax.activation.MimeType:
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    javax.activation.MimeTypeParameterList parameters -> parameters
    java.lang.String TSPECIALS -> TSPECIALS
    void parse(java.lang.String) -> parse
    java.lang.String getPrimaryType() -> getPrimaryType
    void setPrimaryType(java.lang.String) -> setPrimaryType
    java.lang.String getSubType() -> getSubType
    void setSubType(java.lang.String) -> setSubType
    javax.activation.MimeTypeParameterList getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void removeParameter(java.lang.String) -> removeParameter
    java.lang.String toString() -> toString
    java.lang.String getBaseType() -> getBaseType
    boolean match(javax.activation.MimeType) -> match
    boolean match(java.lang.String) -> match
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    boolean isTokenChar(char) -> isTokenChar
    boolean isValidToken(java.lang.String) -> isValidToken
javax.activation.MimeTypeParameterList -> javax.activation.MimeTypeParameterList:
    java.util.Hashtable parameters -> parameters
    java.lang.String TSPECIALS -> TSPECIALS
    void parse(java.lang.String) -> parse
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void remove(java.lang.String) -> remove
    java.util.Enumeration getNames() -> getNames
    java.lang.String toString() -> toString
    boolean isTokenChar(char) -> isTokenChar
    int skipWhiteSpace(java.lang.String,int) -> skipWhiteSpace
    java.lang.String quote(java.lang.String) -> quote
    java.lang.String unquote(java.lang.String) -> unquote
javax.activation.MimeTypeParseException -> javax.activation.MimeTypeParseException:
javax.activation.MimetypesFileTypeMap -> javax.activation.MimetypesFileTypeMap:
    com.sun.activation.registries.MimeTypeFile defDB -> defDB
    com.sun.activation.registries.MimeTypeFile[] DB -> DB
    int PROG -> PROG
    java.lang.String defaultType -> defaultType
    com.sun.activation.registries.MimeTypeFile loadResource(java.lang.String) -> loadResource
    void loadAllResources(java.util.Vector,java.lang.String) -> loadAllResources
    com.sun.activation.registries.MimeTypeFile loadFile(java.lang.String) -> loadFile
    void addMimeTypes(java.lang.String) -> addMimeTypes
    java.lang.String getContentType(java.io.File) -> getContentType
    java.lang.String getContentType(java.lang.String) -> getContentType
javax.activation.ObjectDataContentHandler -> javax.activation.ObjectDataContentHandler:
    myjava.awt.datatransfer.DataFlavor[] transferFlavors -> transferFlavors
    java.lang.Object obj -> obj
    java.lang.String mimeType -> mimeType
    javax.activation.DataContentHandler dch -> dch
    javax.activation.DataContentHandler getDCH() -> getDCH
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor,javax.activation.DataSource) -> getTransferData
    java.lang.Object getContent(javax.activation.DataSource) -> getContent
    void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream) -> writeTo
javax.activation.SecuritySupport -> javax.activation.SecuritySupport:
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String) -> getResourceAsStream
    java.net.URL[] getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    java.net.URL[] getSystemResources(java.lang.String) -> getSystemResources
    java.io.InputStream openStream(java.net.URL) -> openStream
javax.activation.SecuritySupport$1 -> javax.activation.SecuritySupport$1:
    java.lang.Object run() -> run
javax.activation.SecuritySupport$2 -> javax.activation.SecuritySupport$2:
    java.lang.Class val$c -> val$c
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$3 -> javax.activation.SecuritySupport$3:
    java.lang.ClassLoader val$cl -> val$cl
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$4 -> javax.activation.SecuritySupport$4:
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.activation.SecuritySupport$5 -> javax.activation.SecuritySupport$5:
    java.net.URL val$url -> val$url
    java.lang.Object run() -> run
javax.activation.URLDataSource -> javax.activation.URLDataSource:
    java.net.URL url -> url
    java.net.URLConnection url_conn -> url_conn
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.net.URL getURL() -> getURL
javax.activation.UnsupportedDataTypeException -> javax.activation.UnsupportedDataTypeException:
javax.mail.Address -> javax.mail.Address:
    long serialVersionUID -> serialVersionUID
    java.lang.String getType() -> getType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
javax.mail.AuthenticationFailedException -> javax.mail.AuthenticationFailedException:
    long serialVersionUID -> serialVersionUID
javax.mail.Authenticator -> javax.mail.Authenticator:
    java.net.InetAddress requestingSite -> requestingSite
    int requestingPort -> requestingPort
    java.lang.String requestingProtocol -> requestingProtocol
    java.lang.String requestingPrompt -> requestingPrompt
    java.lang.String requestingUserName -> requestingUserName
    void reset() -> reset
    javax.mail.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String) -> requestPasswordAuthentication
    java.net.InetAddress getRequestingSite() -> getRequestingSite
    int getRequestingPort() -> getRequestingPort
    java.lang.String getRequestingProtocol() -> getRequestingProtocol
    java.lang.String getRequestingPrompt() -> getRequestingPrompt
    java.lang.String getDefaultUserName() -> getDefaultUserName
    javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
javax.mail.BodyPart -> javax.mail.BodyPart:
    javax.mail.Multipart parent -> parent
    javax.mail.Multipart getParent() -> getParent
    void setParent(javax.mail.Multipart) -> setParent
javax.mail.EventQueue -> javax.mail.EventQueue:
    javax.mail.EventQueue$QueueElement head -> head
    javax.mail.EventQueue$QueueElement tail -> tail
    java.lang.Thread qThread -> qThread
    void enqueue(javax.mail.event.MailEvent,java.util.Vector) -> enqueue
    javax.mail.EventQueue$QueueElement dequeue() -> dequeue
    void run() -> run
    void stop() -> stop
javax.mail.EventQueue$QueueElement -> javax.mail.EventQueue$QueueElement:
    javax.mail.EventQueue$QueueElement next -> next
    javax.mail.EventQueue$QueueElement prev -> prev
    javax.mail.event.MailEvent event -> event
    java.util.Vector vector -> vector
javax.mail.FetchProfile -> javax.mail.FetchProfile:
    java.util.Vector specials -> specials
    java.util.Vector headers -> headers
    void add(javax.mail.FetchProfile$Item) -> add
    void add(java.lang.String) -> add
    boolean contains(javax.mail.FetchProfile$Item) -> contains
    boolean contains(java.lang.String) -> contains
    javax.mail.FetchProfile$Item[] getItems() -> getItems
    java.lang.String[] getHeaderNames() -> getHeaderNames
javax.mail.FetchProfile$Item -> javax.mail.FetchProfile$Item:
    javax.mail.FetchProfile$Item ENVELOPE -> ENVELOPE
    javax.mail.FetchProfile$Item CONTENT_INFO -> CONTENT_INFO
    javax.mail.FetchProfile$Item FLAGS -> FLAGS
    java.lang.String name -> name
javax.mail.Flags -> javax.mail.Flags:
    int system_flags -> system_flags
    java.util.Hashtable user_flags -> user_flags
    int ANSWERED_BIT -> ANSWERED_BIT
    int DELETED_BIT -> DELETED_BIT
    int DRAFT_BIT -> DRAFT_BIT
    int FLAGGED_BIT -> FLAGGED_BIT
    int RECENT_BIT -> RECENT_BIT
    int SEEN_BIT -> SEEN_BIT
    int USER_BIT -> USER_BIT
    long serialVersionUID -> serialVersionUID
    void add(javax.mail.Flags$Flag) -> add
    void add(java.lang.String) -> add
    void add(javax.mail.Flags) -> add
    void remove(javax.mail.Flags$Flag) -> remove
    void remove(java.lang.String) -> remove
    void remove(javax.mail.Flags) -> remove
    boolean contains(javax.mail.Flags$Flag) -> contains
    boolean contains(java.lang.String) -> contains
    boolean contains(javax.mail.Flags) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    javax.mail.Flags$Flag[] getSystemFlags() -> getSystemFlags
    java.lang.String[] getUserFlags() -> getUserFlags
    java.lang.Object clone() -> clone
javax.mail.Flags$Flag -> javax.mail.Flags$Flag:
    javax.mail.Flags$Flag ANSWERED -> ANSWERED
    javax.mail.Flags$Flag DELETED -> DELETED
    javax.mail.Flags$Flag DRAFT -> DRAFT
    javax.mail.Flags$Flag FLAGGED -> FLAGGED
    javax.mail.Flags$Flag RECENT -> RECENT
    javax.mail.Flags$Flag SEEN -> SEEN
    javax.mail.Flags$Flag USER -> USER
    int bit -> bit
    int access$0(javax.mail.Flags$Flag) -> access$0
javax.mail.Folder -> javax.mail.Folder:
    javax.mail.Store store -> store
    int mode -> mode
    int HOLDS_MESSAGES -> HOLDS_MESSAGES
    int HOLDS_FOLDERS -> HOLDS_FOLDERS
    int READ_ONLY -> READ_ONLY
    int READ_WRITE -> READ_WRITE
    java.util.Vector connectionListeners -> connectionListeners
    java.util.Vector folderListeners -> folderListeners
    java.util.Vector messageCountListeners -> messageCountListeners
    java.util.Vector messageChangedListeners -> messageChangedListeners
    javax.mail.EventQueue q -> q
    java.lang.Object qLock -> qLock
    java.lang.String getName() -> getName
    java.lang.String getFullName() -> getFullName
    javax.mail.URLName getURLName() -> getURLName
    javax.mail.Store getStore() -> getStore
    javax.mail.Folder getParent() -> getParent
    boolean exists() -> exists
    javax.mail.Folder[] list(java.lang.String) -> list
    javax.mail.Folder[] listSubscribed(java.lang.String) -> listSubscribed
    javax.mail.Folder[] list() -> list
    javax.mail.Folder[] listSubscribed() -> listSubscribed
    char getSeparator() -> getSeparator
    int getType() -> getType
    boolean create(int) -> create
    boolean isSubscribed() -> isSubscribed
    void setSubscribed(boolean) -> setSubscribed
    boolean hasNewMessages() -> hasNewMessages
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    boolean delete(boolean) -> delete
    boolean renameTo(javax.mail.Folder) -> renameTo
    void open(int) -> open
    void close(boolean) -> close
    boolean isOpen() -> isOpen
    int getMode() -> getMode
    javax.mail.Flags getPermanentFlags() -> getPermanentFlags
    int getMessageCount() -> getMessageCount
    int getNewMessageCount() -> getNewMessageCount
    int getUnreadMessageCount() -> getUnreadMessageCount
    int getDeletedMessageCount() -> getDeletedMessageCount
    javax.mail.Message getMessage(int) -> getMessage
    javax.mail.Message[] getMessages(int,int) -> getMessages
    javax.mail.Message[] getMessages(int[]) -> getMessages
    javax.mail.Message[] getMessages() -> getMessages
    void appendMessages(javax.mail.Message[]) -> appendMessages
    void fetch(javax.mail.Message[],javax.mail.FetchProfile) -> fetch
    void setFlags(javax.mail.Message[],javax.mail.Flags,boolean) -> setFlags
    void setFlags(int,int,javax.mail.Flags,boolean) -> setFlags
    void setFlags(int[],javax.mail.Flags,boolean) -> setFlags
    void copyMessages(javax.mail.Message[],javax.mail.Folder) -> copyMessages
    javax.mail.Message[] expunge() -> expunge
    javax.mail.Message[] search(javax.mail.search.SearchTerm) -> search
    javax.mail.Message[] search(javax.mail.search.SearchTerm,javax.mail.Message[]) -> search
    void addConnectionListener(javax.mail.event.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(javax.mail.event.ConnectionListener) -> removeConnectionListener
    void notifyConnectionListeners(int) -> notifyConnectionListeners
    void addFolderListener(javax.mail.event.FolderListener) -> addFolderListener
    void removeFolderListener(javax.mail.event.FolderListener) -> removeFolderListener
    void notifyFolderListeners(int) -> notifyFolderListeners
    void notifyFolderRenamedListeners(javax.mail.Folder) -> notifyFolderRenamedListeners
    void addMessageCountListener(javax.mail.event.MessageCountListener) -> addMessageCountListener
    void removeMessageCountListener(javax.mail.event.MessageCountListener) -> removeMessageCountListener
    void notifyMessageAddedListeners(javax.mail.Message[]) -> notifyMessageAddedListeners
    void notifyMessageRemovedListeners(boolean,javax.mail.Message[]) -> notifyMessageRemovedListeners
    void addMessageChangedListener(javax.mail.event.MessageChangedListener) -> addMessageChangedListener
    void removeMessageChangedListener(javax.mail.event.MessageChangedListener) -> removeMessageChangedListener
    void notifyMessageChangedListeners(int,javax.mail.Message) -> notifyMessageChangedListeners
    void queueEvent(javax.mail.event.MailEvent,java.util.Vector) -> queueEvent
    void terminateQueue() -> terminateQueue
    void finalize() -> finalize
    java.lang.String toString() -> toString
javax.mail.Folder$TerminatorEvent -> javax.mail.Folder$TerminatorEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.FolderClosedException -> javax.mail.FolderClosedException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.FolderNotFoundException -> javax.mail.FolderNotFoundException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.Header -> javax.mail.Header:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
javax.mail.IllegalWriteException -> javax.mail.IllegalWriteException:
    long serialVersionUID -> serialVersionUID
javax.mail.Message -> javax.mail.Message:
    int msgnum -> msgnum
    boolean expunged -> expunged
    javax.mail.Folder folder -> folder
    javax.mail.Session session -> session
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom() -> setFrom
    void setFrom(javax.mail.Address) -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    javax.mail.Address[] getAllRecipients() -> getAllRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void setRecipient(javax.mail.Message$RecipientType,javax.mail.Address) -> setRecipient
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    void addRecipient(javax.mail.Message$RecipientType,javax.mail.Address) -> addRecipient
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void setFlag(javax.mail.Flags$Flag,boolean) -> setFlag
    int getMessageNumber() -> getMessageNumber
    void setMessageNumber(int) -> setMessageNumber
    javax.mail.Folder getFolder() -> getFolder
    boolean isExpunged() -> isExpunged
    void setExpunged(boolean) -> setExpunged
    javax.mail.Message reply(boolean) -> reply
    void saveChanges() -> saveChanges
    boolean match(javax.mail.search.SearchTerm) -> match
javax.mail.Message$RecipientType -> javax.mail.Message$RecipientType:
    javax.mail.Message$RecipientType TO -> TO
    javax.mail.Message$RecipientType CC -> CC
    javax.mail.Message$RecipientType BCC -> BCC
    java.lang.String type -> type
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
javax.mail.MessageAware -> javax.mail.MessageAware:
    javax.mail.MessageContext getMessageContext() -> getMessageContext
javax.mail.MessageContext -> javax.mail.MessageContext:
    javax.mail.Part part -> part
    javax.mail.Part getPart() -> getPart
    javax.mail.Message getMessage() -> getMessage
    javax.mail.Message getMessage(javax.mail.Part) -> getMessage
    javax.mail.Session getSession() -> getSession
javax.mail.MessageRemovedException -> javax.mail.MessageRemovedException:
    long serialVersionUID -> serialVersionUID
javax.mail.MessagingException -> javax.mail.MessagingException:
    java.lang.Exception next -> next
    long serialVersionUID -> serialVersionUID
    java.lang.Exception getNextException() -> getNextException
    java.lang.Throwable getCause() -> getCause
    boolean setNextException(java.lang.Exception) -> setNextException
    java.lang.String toString() -> toString
    java.lang.String superToString() -> superToString
javax.mail.MethodNotSupportedException -> javax.mail.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
javax.mail.Multipart -> javax.mail.Multipart:
    java.util.Vector parts -> parts
    java.lang.String contentType -> contentType
    javax.mail.Part parent -> parent
    void setMultipartDataSource(javax.mail.MultipartDataSource) -> setMultipartDataSource
    java.lang.String getContentType() -> getContentType
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
    void writeTo(java.io.OutputStream) -> writeTo
    javax.mail.Part getParent() -> getParent
    void setParent(javax.mail.Part) -> setParent
javax.mail.MultipartDataSource -> javax.mail.MultipartDataSource:
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
javax.mail.NoSuchProviderException -> javax.mail.NoSuchProviderException:
    long serialVersionUID -> serialVersionUID
javax.mail.Part -> javax.mail.Part:
    java.lang.String ATTACHMENT -> ATTACHMENT
    java.lang.String INLINE -> INLINE
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getInputStream() -> getInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
javax.mail.PasswordAuthentication -> javax.mail.PasswordAuthentication:
    java.lang.String userName -> userName
    java.lang.String password -> password
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
javax.mail.Provider -> javax.mail.Provider:
    javax.mail.Provider$Type type -> type
    java.lang.String protocol -> protocol
    java.lang.String className -> className
    java.lang.String vendor -> vendor
    java.lang.String version -> version
    javax.mail.Provider$Type getType() -> getType
    java.lang.String getProtocol() -> getProtocol
    java.lang.String getClassName() -> getClassName
    java.lang.String getVendor() -> getVendor
    java.lang.String getVersion() -> getVersion
    java.lang.String toString() -> toString
javax.mail.Provider$Type -> javax.mail.Provider$Type:
    javax.mail.Provider$Type STORE -> STORE
    javax.mail.Provider$Type TRANSPORT -> TRANSPORT
    java.lang.String type -> type
    java.lang.String toString() -> toString
javax.mail.Quota -> javax.mail.Quota:
    java.lang.String quotaRoot -> quotaRoot
    javax.mail.Quota$Resource[] resources -> resources
    void setResourceLimit(java.lang.String,long) -> setResourceLimit
javax.mail.Quota$Resource -> javax.mail.Quota$Resource:
    java.lang.String name -> name
    long usage -> usage
    long limit -> limit
javax.mail.QuotaAwareStore -> javax.mail.QuotaAwareStore:
    javax.mail.Quota[] getQuota(java.lang.String) -> getQuota
    void setQuota(javax.mail.Quota) -> setQuota
javax.mail.ReadOnlyFolderException -> javax.mail.ReadOnlyFolderException:
    javax.mail.Folder folder -> folder
    long serialVersionUID -> serialVersionUID
    javax.mail.Folder getFolder() -> getFolder
javax.mail.SendFailedException -> javax.mail.SendFailedException:
    javax.mail.Address[] invalid -> invalid
    javax.mail.Address[] validSent -> validSent
    javax.mail.Address[] validUnsent -> validUnsent
    long serialVersionUID -> serialVersionUID
    javax.mail.Address[] getValidSentAddresses() -> getValidSentAddresses
    javax.mail.Address[] getValidUnsentAddresses() -> getValidUnsentAddresses
    javax.mail.Address[] getInvalidAddresses() -> getInvalidAddresses
javax.mail.Service -> javax.mail.Service:
    javax.mail.Session session -> session
    javax.mail.URLName url -> url
    boolean debug -> debug
    boolean connected -> connected
    java.util.Vector connectionListeners -> connectionListeners
    javax.mail.EventQueue q -> q
    java.lang.Object qLock -> qLock
    void connect() -> connect
    void connect(java.lang.String,java.lang.String,java.lang.String) -> connect
    void connect(java.lang.String,java.lang.String) -> connect
    void connect(java.lang.String,int,java.lang.String,java.lang.String) -> connect
    boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String) -> protocolConnect
    boolean isConnected() -> isConnected
    void setConnected(boolean) -> setConnected
    void close() -> close
    javax.mail.URLName getURLName() -> getURLName
    void setURLName(javax.mail.URLName) -> setURLName
    void addConnectionListener(javax.mail.event.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(javax.mail.event.ConnectionListener) -> removeConnectionListener
    void notifyConnectionListeners(int) -> notifyConnectionListeners
    java.lang.String toString() -> toString
    void queueEvent(javax.mail.event.MailEvent,java.util.Vector) -> queueEvent
    void terminateQueue() -> terminateQueue
    void finalize() -> finalize
javax.mail.Service$TerminatorEvent -> javax.mail.Service$TerminatorEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.Session -> javax.mail.Session:
    java.util.Properties props -> props
    javax.mail.Authenticator authenticator -> authenticator
    java.util.Hashtable authTable -> authTable
    boolean debug -> debug
    java.io.PrintStream out -> out
    java.util.Vector providers -> providers
    java.util.Hashtable providersByProtocol -> providersByProtocol
    java.util.Hashtable providersByClassName -> providersByClassName
    java.util.Properties addressMap -> addressMap
    javax.mail.Session defaultSession -> defaultSession
    javax.mail.Session getInstance(java.util.Properties,javax.mail.Authenticator) -> getInstance
    javax.mail.Session getInstance(java.util.Properties) -> getInstance
    javax.mail.Session getDefaultInstance(java.util.Properties,javax.mail.Authenticator) -> getDefaultInstance
    javax.mail.Session getDefaultInstance(java.util.Properties) -> getDefaultInstance
    void setDebug(boolean) -> setDebug
    boolean getDebug() -> getDebug
    void setDebugOut(java.io.PrintStream) -> setDebugOut
    java.io.PrintStream getDebugOut() -> getDebugOut
    javax.mail.Provider[] getProviders() -> getProviders
    javax.mail.Provider getProvider(java.lang.String) -> getProvider
    void setProvider(javax.mail.Provider) -> setProvider
    javax.mail.Store getStore() -> getStore
    javax.mail.Store getStore(java.lang.String) -> getStore
    javax.mail.Store getStore(javax.mail.URLName) -> getStore
    javax.mail.Store getStore(javax.mail.Provider) -> getStore
    javax.mail.Store getStore(javax.mail.Provider,javax.mail.URLName) -> getStore
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Transport getTransport() -> getTransport
    javax.mail.Transport getTransport(java.lang.String) -> getTransport
    javax.mail.Transport getTransport(javax.mail.URLName) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Provider) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Address) -> getTransport
    javax.mail.Transport getTransport(javax.mail.Provider,javax.mail.URLName) -> getTransport
    java.lang.Object getService(javax.mail.Provider,javax.mail.URLName) -> getService
    void setPasswordAuthentication(javax.mail.URLName,javax.mail.PasswordAuthentication) -> setPasswordAuthentication
    javax.mail.PasswordAuthentication getPasswordAuthentication(javax.mail.URLName) -> getPasswordAuthentication
    javax.mail.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String) -> requestPasswordAuthentication
    java.util.Properties getProperties() -> getProperties
    java.lang.String getProperty(java.lang.String) -> getProperty
    void loadProviders(java.lang.Class) -> loadProviders
    void loadProvidersFromStream(java.io.InputStream) -> loadProvidersFromStream
    void addProvider(javax.mail.Provider) -> addProvider
    void loadAddressMap(java.lang.Class) -> loadAddressMap
    void setProtocolForAddress(java.lang.String,java.lang.String) -> setProtocolForAddress
    void loadFile(java.lang.String,javax.mail.StreamLoader) -> loadFile
    void loadResource(java.lang.String,java.lang.Class,javax.mail.StreamLoader) -> loadResource
    void loadAllResources(java.lang.String,java.lang.Class,javax.mail.StreamLoader) -> loadAllResources
    void pr(java.lang.String) -> pr
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.io.InputStream getResourceAsStream(java.lang.Class,java.lang.String) -> getResourceAsStream
    java.net.URL[] getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    java.net.URL[] getSystemResources(java.lang.String) -> getSystemResources
    java.io.InputStream openStream(java.net.URL) -> openStream
    void access$0(javax.mail.Session,java.io.InputStream) -> access$0
    java.util.Properties access$1(javax.mail.Session) -> access$1
javax.mail.Session$1 -> javax.mail.Session$1:
    javax.mail.Session this$0 -> this$0
    void load(java.io.InputStream) -> load
javax.mail.Session$2 -> javax.mail.Session$2:
    javax.mail.Session this$0 -> this$0
    void load(java.io.InputStream) -> load
javax.mail.Session$3 -> javax.mail.Session$3:
    java.lang.Object run() -> run
javax.mail.Session$4 -> javax.mail.Session$4:
    java.lang.Class val$c -> val$c
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$5 -> javax.mail.Session$5:
    java.lang.ClassLoader val$cl -> val$cl
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$6 -> javax.mail.Session$6:
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
javax.mail.Session$7 -> javax.mail.Session$7:
    java.net.URL val$url -> val$url
    java.lang.Object run() -> run
javax.mail.Store -> javax.mail.Store:
    java.util.Vector storeListeners -> storeListeners
    java.util.Vector folderListeners -> folderListeners
    javax.mail.Folder getDefaultFolder() -> getDefaultFolder
    javax.mail.Folder getFolder(java.lang.String) -> getFolder
    javax.mail.Folder getFolder(javax.mail.URLName) -> getFolder
    javax.mail.Folder[] getPersonalNamespaces() -> getPersonalNamespaces
    javax.mail.Folder[] getUserNamespaces(java.lang.String) -> getUserNamespaces
    javax.mail.Folder[] getSharedNamespaces() -> getSharedNamespaces
    void addStoreListener(javax.mail.event.StoreListener) -> addStoreListener
    void removeStoreListener(javax.mail.event.StoreListener) -> removeStoreListener
    void notifyStoreListeners(int,java.lang.String) -> notifyStoreListeners
    void addFolderListener(javax.mail.event.FolderListener) -> addFolderListener
    void removeFolderListener(javax.mail.event.FolderListener) -> removeFolderListener
    void notifyFolderListeners(int,javax.mail.Folder) -> notifyFolderListeners
    void notifyFolderRenamedListeners(javax.mail.Folder,javax.mail.Folder) -> notifyFolderRenamedListeners
javax.mail.StoreClosedException -> javax.mail.StoreClosedException:
    javax.mail.Store store -> store
    long serialVersionUID -> serialVersionUID
    javax.mail.Store getStore() -> getStore
javax.mail.StreamLoader -> javax.mail.StreamLoader:
    void load(java.io.InputStream) -> load
javax.mail.Transport -> javax.mail.Transport:
    java.util.Vector transportListeners -> transportListeners
    void send(javax.mail.Message) -> send
    void send(javax.mail.Message,javax.mail.Address[]) -> send
    void send0(javax.mail.Message,javax.mail.Address[]) -> send0
    void sendMessage(javax.mail.Message,javax.mail.Address[]) -> sendMessage
    void addTransportListener(javax.mail.event.TransportListener) -> addTransportListener
    void removeTransportListener(javax.mail.event.TransportListener) -> removeTransportListener
    void notifyTransportListeners(int,javax.mail.Address[],javax.mail.Address[],javax.mail.Address[],javax.mail.Message) -> notifyTransportListeners
javax.mail.UIDFolder -> javax.mail.UIDFolder:
    long LASTUID -> LASTUID
    long getUIDValidity() -> getUIDValidity
    javax.mail.Message getMessageByUID(long) -> getMessageByUID
    javax.mail.Message[] getMessagesByUID(long,long) -> getMessagesByUID
    javax.mail.Message[] getMessagesByUID(long[]) -> getMessagesByUID
    long getUID(javax.mail.Message) -> getUID
javax.mail.UIDFolder$FetchProfileItem -> javax.mail.UIDFolder$FetchProfileItem:
    javax.mail.UIDFolder$FetchProfileItem UID -> UID
javax.mail.URLName -> javax.mail.URLName:
    java.lang.String fullURL -> fullURL
    java.lang.String protocol -> protocol
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String host -> host
    java.net.InetAddress hostAddress -> hostAddress
    boolean hostAddressKnown -> hostAddressKnown
    int port -> port
    java.lang.String file -> file
    java.lang.String ref -> ref
    int hashCode -> hashCode
    boolean doEncode -> doEncode
    java.util.BitSet dontNeedEncoding -> dontNeedEncoding
    int caseDiff -> caseDiff
    java.lang.String toString() -> toString
    void parseString(java.lang.String) -> parseString
    int getPort() -> getPort
    java.lang.String getProtocol() -> getProtocol
    java.lang.String getFile() -> getFile
    java.lang.String getRef() -> getRef
    java.lang.String getHost() -> getHost
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.net.URL getURL() -> getURL
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.net.InetAddress getHostAddress() -> getHostAddress
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String _encode(java.lang.String) -> _encode
    java.lang.String decode(java.lang.String) -> decode
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
javax.mail.Version -> javax.mail.Version:
    java.lang.String version -> version
javax.mail.event.ConnectionAdapter -> javax.mail.event.ConnectionAdapter:
    void opened(javax.mail.event.ConnectionEvent) -> opened
    void disconnected(javax.mail.event.ConnectionEvent) -> disconnected
    void closed(javax.mail.event.ConnectionEvent) -> closed
javax.mail.event.ConnectionEvent -> javax.mail.event.ConnectionEvent:
    int OPENED -> OPENED
    int DISCONNECTED -> DISCONNECTED
    int CLOSED -> CLOSED
    int type -> type
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.ConnectionListener -> javax.mail.event.ConnectionListener:
    void opened(javax.mail.event.ConnectionEvent) -> opened
    void disconnected(javax.mail.event.ConnectionEvent) -> disconnected
    void closed(javax.mail.event.ConnectionEvent) -> closed
javax.mail.event.FolderAdapter -> javax.mail.event.FolderAdapter:
    void folderCreated(javax.mail.event.FolderEvent) -> folderCreated
    void folderRenamed(javax.mail.event.FolderEvent) -> folderRenamed
    void folderDeleted(javax.mail.event.FolderEvent) -> folderDeleted
javax.mail.event.FolderEvent -> javax.mail.event.FolderEvent:
    int CREATED -> CREATED
    int DELETED -> DELETED
    int RENAMED -> RENAMED
    int type -> type
    javax.mail.Folder folder -> folder
    javax.mail.Folder newFolder -> newFolder
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    javax.mail.Folder getFolder() -> getFolder
    javax.mail.Folder getNewFolder() -> getNewFolder
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.FolderListener -> javax.mail.event.FolderListener:
    void folderCreated(javax.mail.event.FolderEvent) -> folderCreated
    void folderDeleted(javax.mail.event.FolderEvent) -> folderDeleted
    void folderRenamed(javax.mail.event.FolderEvent) -> folderRenamed
javax.mail.event.MailEvent -> javax.mail.event.MailEvent:
    long serialVersionUID -> serialVersionUID
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageChangedEvent -> javax.mail.event.MessageChangedEvent:
    int FLAGS_CHANGED -> FLAGS_CHANGED
    int ENVELOPE_CHANGED -> ENVELOPE_CHANGED
    int type -> type
    javax.mail.Message msg -> msg
    long serialVersionUID -> serialVersionUID
    int getMessageChangeType() -> getMessageChangeType
    javax.mail.Message getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageChangedListener -> javax.mail.event.MessageChangedListener:
    void messageChanged(javax.mail.event.MessageChangedEvent) -> messageChanged
javax.mail.event.MessageCountAdapter -> javax.mail.event.MessageCountAdapter:
    void messagesAdded(javax.mail.event.MessageCountEvent) -> messagesAdded
    void messagesRemoved(javax.mail.event.MessageCountEvent) -> messagesRemoved
javax.mail.event.MessageCountEvent -> javax.mail.event.MessageCountEvent:
    int ADDED -> ADDED
    int REMOVED -> REMOVED
    int type -> type
    boolean removed -> removed
    javax.mail.Message[] msgs -> msgs
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    boolean isRemoved() -> isRemoved
    javax.mail.Message[] getMessages() -> getMessages
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.MessageCountListener -> javax.mail.event.MessageCountListener:
    void messagesAdded(javax.mail.event.MessageCountEvent) -> messagesAdded
    void messagesRemoved(javax.mail.event.MessageCountEvent) -> messagesRemoved
javax.mail.event.StoreEvent -> javax.mail.event.StoreEvent:
    int ALERT -> ALERT
    int NOTICE -> NOTICE
    int type -> type
    java.lang.String message -> message
    long serialVersionUID -> serialVersionUID
    int getMessageType() -> getMessageType
    java.lang.String getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.StoreListener -> javax.mail.event.StoreListener:
    void notification(javax.mail.event.StoreEvent) -> notification
javax.mail.event.TransportAdapter -> javax.mail.event.TransportAdapter:
    void messageDelivered(javax.mail.event.TransportEvent) -> messageDelivered
    void messageNotDelivered(javax.mail.event.TransportEvent) -> messageNotDelivered
    void messagePartiallyDelivered(javax.mail.event.TransportEvent) -> messagePartiallyDelivered
javax.mail.event.TransportEvent -> javax.mail.event.TransportEvent:
    int MESSAGE_DELIVERED -> MESSAGE_DELIVERED
    int MESSAGE_NOT_DELIVERED -> MESSAGE_NOT_DELIVERED
    int MESSAGE_PARTIALLY_DELIVERED -> MESSAGE_PARTIALLY_DELIVERED
    int type -> type
    javax.mail.Address[] validSent -> validSent
    javax.mail.Address[] validUnsent -> validUnsent
    javax.mail.Address[] invalid -> invalid
    javax.mail.Message msg -> msg
    long serialVersionUID -> serialVersionUID
    int getType() -> getType
    javax.mail.Address[] getValidSentAddresses() -> getValidSentAddresses
    javax.mail.Address[] getValidUnsentAddresses() -> getValidUnsentAddresses
    javax.mail.Address[] getInvalidAddresses() -> getInvalidAddresses
    javax.mail.Message getMessage() -> getMessage
    void dispatch(java.lang.Object) -> dispatch
javax.mail.event.TransportListener -> javax.mail.event.TransportListener:
    void messageDelivered(javax.mail.event.TransportEvent) -> messageDelivered
    void messageNotDelivered(javax.mail.event.TransportEvent) -> messageNotDelivered
    void messagePartiallyDelivered(javax.mail.event.TransportEvent) -> messagePartiallyDelivered
javax.mail.internet.AddressException -> javax.mail.internet.AddressException:
    java.lang.String ref -> ref
    int pos -> pos
    long serialVersionUID -> serialVersionUID
    java.lang.String getRef() -> getRef
    int getPos() -> getPos
    java.lang.String toString() -> toString
javax.mail.internet.AsciiOutputStream -> javax.mail.internet.AsciiOutputStream:
    boolean breakOnNonAscii -> breakOnNonAscii
    int ascii -> ascii
    int non_ascii -> non_ascii
    int linelen -> linelen
    boolean longLine -> longLine
    boolean badEOL -> badEOL
    boolean checkEOL -> checkEOL
    int lastb -> lastb
    int ret -> ret
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void check(int) -> check
    int getAscii() -> getAscii
javax.mail.internet.ContentDisposition -> javax.mail.internet.ContentDisposition:
    java.lang.String disposition -> disposition
    javax.mail.internet.ParameterList list -> list
    java.lang.String getDisposition() -> getDisposition
    java.lang.String getParameter(java.lang.String) -> getParameter
    javax.mail.internet.ParameterList getParameterList() -> getParameterList
    void setDisposition(java.lang.String) -> setDisposition
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setParameterList(javax.mail.internet.ParameterList) -> setParameterList
    java.lang.String toString() -> toString
javax.mail.internet.ContentType -> javax.mail.internet.ContentType:
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    javax.mail.internet.ParameterList list -> list
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getBaseType() -> getBaseType
    java.lang.String getParameter(java.lang.String) -> getParameter
    javax.mail.internet.ParameterList getParameterList() -> getParameterList
    void setPrimaryType(java.lang.String) -> setPrimaryType
    void setSubType(java.lang.String) -> setSubType
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setParameterList(javax.mail.internet.ParameterList) -> setParameterList
    java.lang.String toString() -> toString
    boolean match(javax.mail.internet.ContentType) -> match
    boolean match(java.lang.String) -> match
javax.mail.internet.HeaderTokenizer -> javax.mail.internet.HeaderTokenizer:
    java.lang.String string -> string
    boolean skipComments -> skipComments
    java.lang.String delimiters -> delimiters
    int currentPos -> currentPos
    int maxPos -> maxPos
    int nextPos -> nextPos
    int peekPos -> peekPos
    java.lang.String RFC822 -> RFC822
    java.lang.String MIME -> MIME
    javax.mail.internet.HeaderTokenizer$Token EOFToken -> EOFToken
    javax.mail.internet.HeaderTokenizer$Token next() -> next
    javax.mail.internet.HeaderTokenizer$Token peek() -> peek
    java.lang.String getRemainder() -> getRemainder
    javax.mail.internet.HeaderTokenizer$Token getNext() -> getNext
    int skipWhiteSpace() -> skipWhiteSpace
    java.lang.String filterToken(java.lang.String,int,int) -> filterToken
javax.mail.internet.HeaderTokenizer$Token -> javax.mail.internet.HeaderTokenizer$Token:
    int type -> type
    java.lang.String value -> value
    int ATOM -> ATOM
    int QUOTEDSTRING -> QUOTEDSTRING
    int COMMENT -> COMMENT
    int EOF -> EOF
    int getType() -> getType
    java.lang.String getValue() -> getValue
javax.mail.internet.InternetAddress -> javax.mail.internet.InternetAddress:
    java.lang.String address -> address
    java.lang.String personal -> personal
    java.lang.String encodedPersonal -> encodedPersonal
    long serialVersionUID -> serialVersionUID
    java.lang.String rfc822phrase -> rfc822phrase
    java.lang.String specialsNoDotNoAt -> specialsNoDotNoAt
    java.lang.String specialsNoDot -> specialsNoDot
    java.lang.Object clone() -> clone
    java.lang.String getType() -> getType
    void setAddress(java.lang.String) -> setAddress
    void setPersonal(java.lang.String,java.lang.String) -> setPersonal
    void setPersonal(java.lang.String) -> setPersonal
    java.lang.String getAddress() -> getAddress
    java.lang.String getPersonal() -> getPersonal
    java.lang.String toString() -> toString
    java.lang.String toUnicodeString() -> toUnicodeString
    java.lang.String quotePhrase(java.lang.String) -> quotePhrase
    java.lang.String unquote(java.lang.String) -> unquote
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString(javax.mail.Address[]) -> toString
    java.lang.String toString(javax.mail.Address[],int) -> toString
    int lengthOfFirstSegment(java.lang.String) -> lengthOfFirstSegment
    int lengthOfLastSegment(java.lang.String,int) -> lengthOfLastSegment
    javax.mail.internet.InternetAddress getLocalAddress(javax.mail.Session) -> getLocalAddress
    javax.mail.internet.InternetAddress[] parse(java.lang.String) -> parse
    javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean) -> parse
    javax.mail.internet.InternetAddress[] parseHeader(java.lang.String,boolean) -> parseHeader
    javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean,boolean) -> parse
    void validate() -> validate
    void checkAddress(java.lang.String,boolean,boolean) -> checkAddress
    boolean isSimple() -> isSimple
    boolean isGroup() -> isGroup
    javax.mail.internet.InternetAddress[] getGroup(boolean) -> getGroup
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
javax.mail.internet.InternetHeaders -> javax.mail.internet.InternetHeaders:
    java.util.List headers -> headers
    void load(java.io.InputStream) -> load
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
javax.mail.internet.InternetHeaders$InternetHeader -> javax.mail.internet.InternetHeaders$InternetHeader:
    java.lang.String line -> line
    java.lang.String getValue() -> getValue
javax.mail.internet.InternetHeaders$matchEnum -> javax.mail.internet.InternetHeaders$matchEnum:
    java.util.Iterator e -> e
    java.lang.String[] names -> names
    boolean match -> match
    boolean want_line -> want_line
    javax.mail.internet.InternetHeaders$InternetHeader next_header -> next_header
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
    javax.mail.internet.InternetHeaders$InternetHeader nextMatch() -> nextMatch
javax.mail.internet.MailDateFormat -> javax.mail.internet.MailDateFormat:
    long serialVersionUID -> serialVersionUID
    boolean debug -> debug
    java.util.TimeZone tz -> tz
    java.util.Calendar cal -> cal
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.util.Date parseDate(char[],java.text.ParsePosition,boolean) -> parseDate
    java.util.Date ourUTC(int,int,int,int,int,int,int,boolean) -> ourUTC
    void setCalendar(java.util.Calendar) -> setCalendar
    void setNumberFormat(java.text.NumberFormat) -> setNumberFormat
javax.mail.internet.MailDateParser -> javax.mail.internet.MailDateParser:
    int index -> index
    char[] orig -> orig
    void skipUntilNumber() -> skipUntilNumber
    void skipWhiteSpace() -> skipWhiteSpace
    int peekChar() -> peekChar
    void skipChar(char) -> skipChar
    boolean skipIfChar(char) -> skipIfChar
    int parseNumber() -> parseNumber
    int parseMonth() -> parseMonth
    int parseTimeZone() -> parseTimeZone
    int parseNumericTimeZone() -> parseNumericTimeZone
    int parseAlphaTimeZone() -> parseAlphaTimeZone
    int getIndex() -> getIndex
javax.mail.internet.MimeBodyPart -> javax.mail.internet.MimeBodyPart:
    boolean setDefaultTextCharset -> setDefaultTextCharset
    boolean setContentTypeFileName -> setContentTypeFileName
    boolean encodeFileName -> encodeFileName
    boolean decodeFileName -> decodeFileName
    boolean cacheMultipart -> cacheMultipart
    javax.activation.DataHandler dh -> dh
    byte[] content -> content
    java.io.InputStream contentStream -> contentStream
    javax.mail.internet.InternetHeaders headers -> headers
    java.lang.Object cachedContent -> cachedContent
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    java.io.InputStream getRawInputStream() -> getRawInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    void attachFile(java.io.File) -> attachFile
    void attachFile(java.lang.String) -> attachFile
    void saveFile(java.io.File) -> saveFile
    void saveFile(java.lang.String) -> saveFile
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    void updateHeaders() -> updateHeaders
    boolean isMimeType(javax.mail.internet.MimePart,java.lang.String) -> isMimeType
    void setText(javax.mail.internet.MimePart,java.lang.String,java.lang.String,java.lang.String) -> setText
    java.lang.String getDisposition(javax.mail.internet.MimePart) -> getDisposition
    void setDisposition(javax.mail.internet.MimePart,java.lang.String) -> setDisposition
    java.lang.String getDescription(javax.mail.internet.MimePart) -> getDescription
    void setDescription(javax.mail.internet.MimePart,java.lang.String,java.lang.String) -> setDescription
    java.lang.String getFileName(javax.mail.internet.MimePart) -> getFileName
    void setFileName(javax.mail.internet.MimePart,java.lang.String) -> setFileName
    java.lang.String[] getContentLanguage(javax.mail.internet.MimePart) -> getContentLanguage
    void setContentLanguage(javax.mail.internet.MimePart,java.lang.String[]) -> setContentLanguage
    java.lang.String getEncoding(javax.mail.internet.MimePart) -> getEncoding
    void setEncoding(javax.mail.internet.MimePart,java.lang.String) -> setEncoding
    void updateHeaders(javax.mail.internet.MimePart) -> updateHeaders
    void invalidateContentHeaders(javax.mail.internet.MimePart) -> invalidateContentHeaders
    void writeTo(javax.mail.internet.MimePart,java.io.OutputStream,java.lang.String[]) -> writeTo
javax.mail.internet.MimeMessage -> javax.mail.internet.MimeMessage:
    javax.activation.DataHandler dh -> dh
    byte[] content -> content
    java.io.InputStream contentStream -> contentStream
    javax.mail.internet.InternetHeaders headers -> headers
    javax.mail.Flags flags -> flags
    boolean modified -> modified
    boolean saved -> saved
    java.lang.Object cachedContent -> cachedContent
    javax.mail.internet.MailDateFormat mailDateFormat -> mailDateFormat
    boolean strict -> strict
    javax.mail.Flags answeredFlag -> answeredFlag
    void initStrict() -> initStrict
    void parse(java.io.InputStream) -> parse
    javax.mail.Address[] getFrom() -> getFrom
    void setFrom(javax.mail.Address) -> setFrom
    void setFrom() -> setFrom
    void addFrom(javax.mail.Address[]) -> addFrom
    javax.mail.Address getSender() -> getSender
    void setSender(javax.mail.Address) -> setSender
    javax.mail.Address[] getRecipients(javax.mail.Message$RecipientType) -> getRecipients
    javax.mail.Address[] getAllRecipients() -> getAllRecipients
    void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> setRecipients
    void setRecipients(javax.mail.Message$RecipientType,java.lang.String) -> setRecipients
    void addRecipients(javax.mail.Message$RecipientType,javax.mail.Address[]) -> addRecipients
    void addRecipients(javax.mail.Message$RecipientType,java.lang.String) -> addRecipients
    javax.mail.Address[] getReplyTo() -> getReplyTo
    void setReplyTo(javax.mail.Address[]) -> setReplyTo
    javax.mail.Address[] getAddressHeader(java.lang.String) -> getAddressHeader
    void setAddressHeader(java.lang.String,javax.mail.Address[]) -> setAddressHeader
    void addAddressHeader(java.lang.String,javax.mail.Address[]) -> addAddressHeader
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    void setSubject(java.lang.String,java.lang.String) -> setSubject
    java.util.Date getSentDate() -> getSentDate
    void setSentDate(java.util.Date) -> setSentDate
    java.util.Date getReceivedDate() -> getReceivedDate
    int getSize() -> getSize
    int getLineCount() -> getLineCount
    java.lang.String getContentType() -> getContentType
    boolean isMimeType(java.lang.String) -> isMimeType
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    void setContentID(java.lang.String) -> setContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    void setDescription(java.lang.String,java.lang.String) -> setDescription
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    java.lang.String getMessageID() -> getMessageID
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.lang.String getHeaderName(javax.mail.Message$RecipientType) -> getHeaderName
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getContentStream() -> getContentStream
    java.io.InputStream getRawInputStream() -> getRawInputStream
    javax.activation.DataHandler getDataHandler() -> getDataHandler
    java.lang.Object getContent() -> getContent
    void setDataHandler(javax.activation.DataHandler) -> setDataHandler
    void setContent(java.lang.Object,java.lang.String) -> setContent
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
    void setContent(javax.mail.Multipart) -> setContent
    javax.mail.Message reply(boolean) -> reply
    javax.mail.Address[] eliminateDuplicates(java.util.Vector,javax.mail.Address[]) -> eliminateDuplicates
    void writeTo(java.io.OutputStream) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String[]) -> writeTo
    java.lang.String[] getHeader(java.lang.String) -> getHeader
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    java.util.Enumeration getAllHeaders() -> getAllHeaders
    java.util.Enumeration getMatchingHeaders(java.lang.String[]) -> getMatchingHeaders
    java.util.Enumeration getNonMatchingHeaders(java.lang.String[]) -> getNonMatchingHeaders
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    javax.mail.Flags getFlags() -> getFlags
    boolean isSet(javax.mail.Flags$Flag) -> isSet
    void setFlags(javax.mail.Flags,boolean) -> setFlags
    void saveChanges() -> saveChanges
    void updateMessageID() -> updateMessageID
    void updateHeaders() -> updateHeaders
    javax.mail.internet.InternetHeaders createInternetHeaders(java.io.InputStream) -> createInternetHeaders
    javax.mail.internet.MimeMessage createMimeMessage(javax.mail.Session) -> createMimeMessage
javax.mail.internet.MimeMessage$RecipientType -> javax.mail.internet.MimeMessage$RecipientType:
    long serialVersionUID -> serialVersionUID
    javax.mail.internet.MimeMessage$RecipientType NEWSGROUPS -> NEWSGROUPS
    java.lang.Object readResolve() -> readResolve
javax.mail.internet.MimeMultipart -> javax.mail.internet.MimeMultipart:
    boolean ignoreMissingEndBoundary -> ignoreMissingEndBoundary
    boolean ignoreMissingBoundaryParameter -> ignoreMissingBoundaryParameter
    boolean bmparse -> bmparse
    javax.activation.DataSource ds -> ds
    boolean parsed -> parsed
    boolean complete -> complete
    java.lang.String preamble -> preamble
    void setSubType(java.lang.String) -> setSubType
    int getCount() -> getCount
    javax.mail.BodyPart getBodyPart(int) -> getBodyPart
    javax.mail.BodyPart getBodyPart(java.lang.String) -> getBodyPart
    boolean removeBodyPart(javax.mail.BodyPart) -> removeBodyPart
    void removeBodyPart(int) -> removeBodyPart
    void addBodyPart(javax.mail.BodyPart) -> addBodyPart
    void addBodyPart(javax.mail.BodyPart,int) -> addBodyPart
    boolean isComplete() -> isComplete
    java.lang.String getPreamble() -> getPreamble
    void setPreamble(java.lang.String) -> setPreamble
    void updateHeaders() -> updateHeaders
    void writeTo(java.io.OutputStream) -> writeTo
    void parse() -> parse
    void parsebm() -> parsebm
    int readFully(java.io.InputStream,byte[],int,int) -> readFully
    void skipFully(java.io.InputStream,long) -> skipFully
    javax.mail.internet.InternetHeaders createInternetHeaders(java.io.InputStream) -> createInternetHeaders
    javax.mail.internet.MimeBodyPart createMimeBodyPart(javax.mail.internet.InternetHeaders,byte[]) -> createMimeBodyPart
    javax.mail.internet.MimeBodyPart createMimeBodyPart(java.io.InputStream) -> createMimeBodyPart
javax.mail.internet.MimePart -> javax.mail.internet.MimePart:
    java.lang.String getHeader(java.lang.String,java.lang.String) -> getHeader
    void addHeaderLine(java.lang.String) -> addHeaderLine
    java.util.Enumeration getAllHeaderLines() -> getAllHeaderLines
    java.util.Enumeration getMatchingHeaderLines(java.lang.String[]) -> getMatchingHeaderLines
    java.util.Enumeration getNonMatchingHeaderLines(java.lang.String[]) -> getNonMatchingHeaderLines
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getContentID() -> getContentID
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String[] getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String[]) -> setContentLanguage
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String) -> setText
    void setText(java.lang.String,java.lang.String,java.lang.String) -> setText
javax.mail.internet.MimePartDataSource -> javax.mail.internet.MimePartDataSource:
    javax.mail.internet.MimePart part -> part
    javax.mail.MessageContext context -> context
    boolean ignoreMultipartEncoding -> ignoreMultipartEncoding
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String restrictEncoding(java.lang.String,javax.mail.internet.MimePart) -> restrictEncoding
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    javax.mail.MessageContext getMessageContext() -> getMessageContext
javax.mail.internet.MimeUtility -> javax.mail.internet.MimeUtility:
    int ALL -> ALL
    boolean decodeStrict -> decodeStrict
    boolean encodeEolStrict -> encodeEolStrict
    boolean foldEncodedWords -> foldEncodedWords
    boolean foldText -> foldText
    java.lang.String defaultJavaCharset -> defaultJavaCharset
    java.lang.String defaultMIMECharset -> defaultMIMECharset
    java.util.Hashtable mime2java -> mime2java
    java.util.Hashtable java2mime -> java2mime
    int ALL_ASCII -> ALL_ASCII
    int MOSTLY_ASCII -> MOSTLY_ASCII
    int MOSTLY_NONASCII -> MOSTLY_NONASCII
    java.lang.String getEncoding(javax.activation.DataSource) -> getEncoding
    java.lang.String getEncoding(javax.activation.DataHandler) -> getEncoding
    java.io.InputStream decode(java.io.InputStream,java.lang.String) -> decode
    java.io.OutputStream encode(java.io.OutputStream,java.lang.String) -> encode
    java.io.OutputStream encode(java.io.OutputStream,java.lang.String,java.lang.String) -> encode
    java.lang.String encodeText(java.lang.String) -> encodeText
    java.lang.String encodeText(java.lang.String,java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String encodeWord(java.lang.String) -> encodeWord
    java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String) -> encodeWord
    java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String,boolean) -> encodeWord
    void doEncode(java.lang.String,boolean,java.lang.String,int,java.lang.String,boolean,boolean,java.lang.StringBuffer) -> doEncode
    java.lang.String decodeWord(java.lang.String) -> decodeWord
    java.lang.String decodeInnerWords(java.lang.String) -> decodeInnerWords
    java.lang.String quote(java.lang.String,java.lang.String) -> quote
    java.lang.String fold(int,java.lang.String) -> fold
    java.lang.String unfold(java.lang.String) -> unfold
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String,int) -> indexOfAny
    java.lang.String javaCharset(java.lang.String) -> javaCharset
    java.lang.String mimeCharset(java.lang.String) -> mimeCharset
    java.lang.String getDefaultJavaCharset() -> getDefaultJavaCharset
    java.lang.String getDefaultMIMECharset() -> getDefaultMIMECharset
    void loadMappings(com.sun.mail.util.LineInputStream,java.util.Hashtable) -> loadMappings
    int checkAscii(java.lang.String) -> checkAscii
    int checkAscii(byte[]) -> checkAscii
    int checkAscii(java.io.InputStream,int,boolean) -> checkAscii
    boolean nonascii(int) -> nonascii
javax.mail.internet.MimeUtility$1NullInputStream -> javax.mail.internet.MimeUtility$1NullInputStream:
    int read() -> read
javax.mail.internet.NewsAddress -> javax.mail.internet.NewsAddress:
    java.lang.String newsgroup -> newsgroup
    java.lang.String host -> host
    long serialVersionUID -> serialVersionUID
    java.lang.String getType() -> getType
    void setNewsgroup(java.lang.String) -> setNewsgroup
    java.lang.String getNewsgroup() -> getNewsgroup
    void setHost(java.lang.String) -> setHost
    java.lang.String getHost() -> getHost
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString(javax.mail.Address[]) -> toString
    javax.mail.internet.NewsAddress[] parse(java.lang.String) -> parse
javax.mail.internet.ParameterList -> javax.mail.internet.ParameterList:
    java.util.Map list -> list
    java.util.Set multisegmentNames -> multisegmentNames
    java.util.Map slist -> slist
    java.lang.String lastName -> lastName
    boolean encodeParameters -> encodeParameters
    boolean decodeParameters -> decodeParameters
    boolean decodeParametersStrict -> decodeParametersStrict
    boolean applehack -> applehack
    char[] hex -> hex
    void putEncodedName(java.lang.String,java.lang.String) -> putEncodedName
    void combineMultisegmentNames(boolean) -> combineMultisegmentNames
    int size() -> size
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,java.lang.String,java.lang.String) -> set
    void remove(java.lang.String) -> remove
    java.util.Enumeration getNames() -> getNames
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String quote(java.lang.String) -> quote
    javax.mail.internet.ParameterList$Value encodeValue(java.lang.String,java.lang.String) -> encodeValue
    javax.mail.internet.ParameterList$Value decodeValue(java.lang.String) -> decodeValue
    java.lang.String decodeBytes(java.lang.String,java.lang.String) -> decodeBytes
    java.lang.String access$0(java.lang.String) -> access$0
javax.mail.internet.ParameterList$MultiValue -> javax.mail.internet.ParameterList$MultiValue:
    java.lang.String value -> value
javax.mail.internet.ParameterList$ParamEnum -> javax.mail.internet.ParameterList$ParamEnum:
    java.util.Iterator it -> it
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
javax.mail.internet.ParameterList$ToStringBuffer -> javax.mail.internet.ParameterList$ToStringBuffer:
    int used -> used
    java.lang.StringBuffer sb -> sb
    void addNV(java.lang.String,java.lang.String) -> addNV
    java.lang.String toString() -> toString
javax.mail.internet.ParameterList$Value -> javax.mail.internet.ParameterList$Value:
    java.lang.String value -> value
    java.lang.String charset -> charset
    java.lang.String encodedValue -> encodedValue
javax.mail.internet.ParseException -> javax.mail.internet.ParseException:
    long serialVersionUID -> serialVersionUID
javax.mail.internet.PreencodedMimeBodyPart -> javax.mail.internet.PreencodedMimeBodyPart:
    java.lang.String encoding -> encoding
    java.lang.String getEncoding() -> getEncoding
    void writeTo(java.io.OutputStream) -> writeTo
    void updateHeaders() -> updateHeaders
javax.mail.internet.SharedInputStream -> javax.mail.internet.SharedInputStream:
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
javax.mail.internet.UniqueValue -> javax.mail.internet.UniqueValue:
    int id -> id
    java.lang.String getUniqueBoundaryValue() -> getUniqueBoundaryValue
    java.lang.String getUniqueMessageIDValue(javax.mail.Session) -> getUniqueMessageIDValue
    int getUniqueId() -> getUniqueId
javax.mail.search.AddressStringTerm -> javax.mail.search.AddressStringTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Address) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.AddressTerm -> javax.mail.search.AddressTerm:
    javax.mail.Address address -> address
    long serialVersionUID -> serialVersionUID
    javax.mail.Address getAddress() -> getAddress
    boolean match(javax.mail.Address) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.AndTerm -> javax.mail.search.AndTerm:
    javax.mail.search.SearchTerm[] terms -> terms
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm[] getTerms() -> getTerms
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.BodyTerm -> javax.mail.search.BodyTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean matchPart(javax.mail.Part) -> matchPart
    boolean equals(java.lang.Object) -> equals
javax.mail.search.ComparisonTerm -> javax.mail.search.ComparisonTerm:
    int LE -> LE
    int LT -> LT
    int EQ -> EQ
    int NE -> NE
    int GT -> GT
    int GE -> GE
    int comparison -> comparison
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.DateTerm -> javax.mail.search.DateTerm:
    java.util.Date date -> date
    long serialVersionUID -> serialVersionUID
    java.util.Date getDate() -> getDate
    int getComparison() -> getComparison
    boolean match(java.util.Date) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.FlagTerm -> javax.mail.search.FlagTerm:
    boolean set -> set
    javax.mail.Flags flags -> flags
    long serialVersionUID -> serialVersionUID
    javax.mail.Flags getFlags() -> getFlags
    boolean getTestSet() -> getTestSet
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.FromStringTerm -> javax.mail.search.FromStringTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.FromTerm -> javax.mail.search.FromTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.HeaderTerm -> javax.mail.search.HeaderTerm:
    java.lang.String headerName -> headerName
    long serialVersionUID -> serialVersionUID
    java.lang.String getHeaderName() -> getHeaderName
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.IntegerComparisonTerm -> javax.mail.search.IntegerComparisonTerm:
    int number -> number
    long serialVersionUID -> serialVersionUID
    int getNumber() -> getNumber
    int getComparison() -> getComparison
    boolean match(int) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.MessageIDTerm -> javax.mail.search.MessageIDTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.MessageNumberTerm -> javax.mail.search.MessageNumberTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.NotTerm -> javax.mail.search.NotTerm:
    javax.mail.search.SearchTerm term -> term
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm getTerm() -> getTerm
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.OrTerm -> javax.mail.search.OrTerm:
    javax.mail.search.SearchTerm[] terms -> terms
    long serialVersionUID -> serialVersionUID
    javax.mail.search.SearchTerm[] getTerms() -> getTerms
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.ReceivedDateTerm -> javax.mail.search.ReceivedDateTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.RecipientStringTerm -> javax.mail.search.RecipientStringTerm:
    javax.mail.Message$RecipientType type -> type
    long serialVersionUID -> serialVersionUID
    javax.mail.Message$RecipientType getRecipientType() -> getRecipientType
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.RecipientTerm -> javax.mail.search.RecipientTerm:
    javax.mail.Message$RecipientType type -> type
    long serialVersionUID -> serialVersionUID
    javax.mail.Message$RecipientType getRecipientType() -> getRecipientType
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.SearchException -> javax.mail.search.SearchException:
    long serialVersionUID -> serialVersionUID
javax.mail.search.SearchTerm -> javax.mail.search.SearchTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
javax.mail.search.SentDateTerm -> javax.mail.search.SentDateTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.SizeTerm -> javax.mail.search.SizeTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.search.StringTerm -> javax.mail.search.StringTerm:
    java.lang.String pattern -> pattern
    boolean ignoreCase -> ignoreCase
    long serialVersionUID -> serialVersionUID
    java.lang.String getPattern() -> getPattern
    boolean getIgnoreCase() -> getIgnoreCase
    boolean match(java.lang.String) -> match
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
javax.mail.search.SubjectTerm -> javax.mail.search.SubjectTerm:
    long serialVersionUID -> serialVersionUID
    boolean match(javax.mail.Message) -> match
    boolean equals(java.lang.Object) -> equals
javax.mail.util.ByteArrayDataSource -> javax.mail.util.ByteArrayDataSource:
    byte[] data -> data
    int len -> len
    java.lang.String type -> type
    java.lang.String name -> name
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getContentType() -> getContentType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
javax.mail.util.ByteArrayDataSource$DSByteArrayOutputStream -> javax.mail.util.ByteArrayDataSource$DSByteArrayOutputStream:
    byte[] getBuf() -> getBuf
    int getCount() -> getCount
javax.mail.util.SharedByteArrayInputStream -> javax.mail.util.SharedByteArrayInputStream:
    int start -> start
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
javax.mail.util.SharedFileInputStream -> javax.mail.util.SharedFileInputStream:
    int defaultBufferSize -> defaultBufferSize
    java.io.RandomAccessFile in -> in
    int bufsize -> bufsize
    long bufpos -> bufpos
    long start -> start
    long datalen -> datalen
    boolean master -> master
    javax.mail.util.SharedFileInputStream$SharedFile sf -> sf
    void ensureOpen() -> ensureOpen
    void init(javax.mail.util.SharedFileInputStream$SharedFile,int) -> init
    void fill() -> fill
    int read() -> read
    int read1(byte[],int,int) -> read1
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    int in_available() -> in_available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
    long getPosition() -> getPosition
    java.io.InputStream newStream(long,long) -> newStream
    void finalize() -> finalize
javax.mail.util.SharedFileInputStream$SharedFile -> javax.mail.util.SharedFileInputStream$SharedFile:
    int cnt -> cnt
    java.io.RandomAccessFile in -> in
    java.io.RandomAccessFile open() -> open
    void close() -> close
    void forceClose() -> forceClose
    void finalize() -> finalize
myjava.awt.datatransfer.DataFlavor -> myjava.awt.datatransfer.DataFlavor:
    long serialVersionUID -> serialVersionUID
    myjava.awt.datatransfer.DataFlavor plainTextFlavor -> plainTextFlavor
    myjava.awt.datatransfer.DataFlavor stringFlavor -> stringFlavor
    myjava.awt.datatransfer.DataFlavor javaFileListFlavor -> javaFileListFlavor
    java.lang.String javaJVMLocalObjectMimeType -> javaJVMLocalObjectMimeType
    java.lang.String javaRemoteObjectMimeType -> javaRemoteObjectMimeType
    java.lang.String javaSerializedObjectMimeType -> javaSerializedObjectMimeType
    java.lang.String[] sortedTextFlavors -> sortedTextFlavors
    myjava.awt.datatransfer.DataFlavor plainUnicodeFlavor -> plainUnicodeFlavor
    java.lang.String humanPresentableName -> humanPresentableName
    java.lang.Class representationClass -> representationClass
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType mimeInfo -> mimeInfo
    myjava.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor() -> getTextPlainUnicodeFlavor
    java.lang.Class tryToLoadClass(java.lang.String,java.lang.ClassLoader) -> tryToLoadClass
    boolean isCharsetSupported(java.lang.String) -> isCharsetSupported
    void init(java.lang.String,java.lang.String,java.lang.ClassLoader) -> init
    java.lang.String getCharset() -> getCharset
    boolean isCharsetRequired() -> isCharsetRequired
    boolean isCharsetRedundant() -> isCharsetRedundant
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType getMimeInfo() -> getMimeInfo
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getHumanPresentableName() -> getHumanPresentableName
    void setHumanPresentableName(java.lang.String) -> setHumanPresentableName
    java.lang.Class getRepresentationClass() -> getRepresentationClass
    java.lang.Class getDefaultRepresentationClass() -> getDefaultRepresentationClass
    java.lang.String getDefaultRepresentationClassAsString() -> getDefaultRepresentationClassAsString
    boolean isRepresentationClassSerializable() -> isRepresentationClassSerializable
    boolean isRepresentationClassRemote() -> isRepresentationClassRemote
    boolean isRepresentationClassReader() -> isRepresentationClassReader
    boolean isRepresentationClassInputStream() -> isRepresentationClassInputStream
    boolean isRepresentationClassCharBuffer() -> isRepresentationClassCharBuffer
    boolean isRepresentationClassByteBuffer() -> isRepresentationClassByteBuffer
    java.lang.String normalizeMimeTypeParameter(java.lang.String,java.lang.String) -> normalizeMimeTypeParameter
    java.lang.String normalizeMimeType(java.lang.String) -> normalizeMimeType
    boolean isMimeTypeEqual(myjava.awt.datatransfer.DataFlavor) -> isMimeTypeEqual
    boolean isMimeTypeEqual(java.lang.String) -> isMimeTypeEqual
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    boolean isMimeTypeSerializedObject() -> isMimeTypeSerializedObject
    boolean equals(java.lang.Object) -> equals
    boolean equals(myjava.awt.datatransfer.DataFlavor) -> equals
    boolean equals(java.lang.String) -> equals
    boolean match(myjava.awt.datatransfer.DataFlavor) -> match
    int hashCode() -> hashCode
    java.lang.String getKeyInfo() -> getKeyInfo
    boolean isFlavorSerializedObjectType() -> isFlavorSerializedObjectType
    boolean isFlavorRemoteObjectType() -> isFlavorRemoteObjectType
    boolean isFlavorJavaFileListType() -> isFlavorJavaFileListType
    boolean isFlavorTextType() -> isFlavorTextType
    java.io.Reader getReaderForText(myjava.awt.datatransfer.Transferable) -> getReaderForText
    myjava.awt.datatransfer.DataFlavor selectBestTextFlavor(myjava.awt.datatransfer.DataFlavor[]) -> selectBestTextFlavor
    myjava.awt.datatransfer.DataFlavor selectBestFlavorWCharset(java.util.List) -> selectBestFlavorWCharset
    myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List) -> selectBestByCharset
    java.util.List selectBestByAlphabet(java.util.List) -> selectBestByAlphabet
    java.util.List getFlavors(java.util.List,java.lang.String[]) -> getFlavors
    myjava.awt.datatransfer.DataFlavor selectBestFlavorWOCharset(java.util.List) -> selectBestFlavorWOCharset
    java.util.List getFlavors(java.util.List,java.lang.Class) -> getFlavors
    java.util.List sortTextFlavorsByType(java.util.List) -> sortTextFlavorsByType
    java.util.List fetchTextFlavors(java.util.List,java.lang.String) -> fetchTextFlavors
    boolean isUnicodeFlavor() -> isUnicodeFlavor
    boolean isByteCodeFlavor() -> isByteCodeFlavor
myjava.awt.datatransfer.MimeTypeProcessor -> myjava.awt.datatransfer.MimeTypeProcessor:
    myjava.awt.datatransfer.MimeTypeProcessor instance -> instance
    myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String) -> parse
    java.lang.String assemble(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> assemble
    void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveType
    void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveParams
    void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveParam
    java.lang.String retrieveQuoted(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveQuoted
    java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition) -> retrieveToken
    int getNextMeaningfulIndex(java.lang.String,int) -> getNextMeaningfulIndex
    boolean isTSpecialChar(char) -> isTSpecialChar
    boolean isMeaningfulChar(char) -> isMeaningfulChar
myjava.awt.datatransfer.MimeTypeProcessor$MimeType -> myjava.awt.datatransfer.MimeTypeProcessor$MimeType:
    long serialVersionUID -> serialVersionUID
    java.lang.String primaryType -> primaryType
    java.lang.String subType -> subType
    java.util.Hashtable parameters -> parameters
    java.util.Hashtable systemParameters -> systemParameters
    boolean equals(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> equals
    java.lang.String getPrimaryType() -> getPrimaryType
    java.lang.String getSubType() -> getSubType
    java.lang.String getFullType() -> getFullType
    java.lang.String getParameter(java.lang.String) -> getParameter
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void removeParameter(java.lang.String) -> removeParameter
    java.lang.Object getSystemParameter(java.lang.String) -> getSystemParameter
    void addSystemParameter(java.lang.String,java.lang.Object) -> addSystemParameter
    java.lang.Object clone() -> clone
    java.util.Hashtable access$0(myjava.awt.datatransfer.MimeTypeProcessor$MimeType) -> access$0
    void access$1(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String) -> access$1
    void access$2(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String) -> access$2
    void access$3(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable) -> access$3
    void access$4(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable) -> access$4
myjava.awt.datatransfer.MimeTypeProcessor$StringPosition -> myjava.awt.datatransfer.MimeTypeProcessor$StringPosition:
    int i -> i
myjava.awt.datatransfer.Transferable -> myjava.awt.datatransfer.Transferable:
    java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor) -> getTransferData
    boolean isDataFlavorSupported(myjava.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    myjava.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
myjava.awt.datatransfer.UnsupportedFlavorException -> myjava.awt.datatransfer.UnsupportedFlavorException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.awt.ContextStorage -> org.apache.harmony.awt.ContextStorage:
    boolean shutdownPending -> shutdownPending
    org.apache.harmony.awt.ContextStorage globalContext -> globalContext
    java.awt.Toolkit toolkit -> toolkit
    org.apache.harmony.awt.datatransfer.DTK dtk -> dtk
    java.awt.GraphicsEnvironment graphicsEnvironment -> graphicsEnvironment
    java.lang.Object contextLock -> contextLock
    void setDefaultToolkit(java.awt.Toolkit) -> setDefaultToolkit
    java.awt.Toolkit getDefaultToolkit() -> getDefaultToolkit
    void setDTK(org.apache.harmony.awt.datatransfer.DTK) -> setDTK
    org.apache.harmony.awt.datatransfer.DTK getDTK() -> getDTK
    java.lang.Object getContextLock() -> getContextLock
    java.awt.GraphicsEnvironment getGraphicsEnvironment() -> getGraphicsEnvironment
    void setGraphicsEnvironment(java.awt.GraphicsEnvironment) -> setGraphicsEnvironment
    org.apache.harmony.awt.ContextStorage getCurrentContext() -> getCurrentContext
    boolean shutdownPending() -> shutdownPending
    void shutdown() -> shutdown
org.apache.harmony.awt.ContextStorage$ContextLock -> org.apache.harmony.awt.ContextStorage$ContextLock:
    org.apache.harmony.awt.ContextStorage this$0 -> this$0
org.apache.harmony.awt.datatransfer.DTK -> org.apache.harmony.awt.datatransfer.DTK:
    org.apache.harmony.awt.datatransfer.NativeClipboard nativeClipboard -> nativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard nativeSelection -> nativeSelection
    java.awt.datatransfer.SystemFlavorMap systemFlavorMap -> systemFlavorMap
    org.apache.harmony.awt.datatransfer.DataTransferThread dataTransferThread -> dataTransferThread
    org.apache.harmony.awt.datatransfer.DTK getDTK() -> getDTK
    java.awt.datatransfer.SystemFlavorMap getSystemFlavorMap() -> getSystemFlavorMap
    void setSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap) -> setSystemFlavorMap
    org.apache.harmony.awt.datatransfer.NativeClipboard getNativeClipboard() -> getNativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard getNativeSelection() -> getNativeSelection
    org.apache.harmony.awt.datatransfer.NativeClipboard newNativeClipboard() -> newNativeClipboard
    org.apache.harmony.awt.datatransfer.NativeClipboard newNativeSelection() -> newNativeSelection
    void initDragAndDrop() -> initDragAndDrop
    void runEventLoop() -> runEventLoop
    java.awt.dnd.peer.DropTargetContextPeer createDropTargetContextPeer(java.awt.dnd.DropTargetContext) -> createDropTargetContextPeer
    java.awt.dnd.peer.DragSourceContextPeer createDragSourceContextPeer(java.awt.dnd.DragGestureEvent) -> createDragSourceContextPeer
    org.apache.harmony.awt.datatransfer.DTK createDTK() -> createDTK
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String[] getCharsets() -> getCharsets
    void initSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap) -> initSystemFlavorMap
    void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.awt.datatransfer.DataFlavor,java.lang.String) -> appendSystemFlavorMap
    void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.lang.String[],java.lang.String,java.lang.String) -> appendSystemFlavorMap
org.apache.harmony.awt.datatransfer.DataProvider -> org.apache.harmony.awt.datatransfer.DataProvider:
    java.lang.String FORMAT_TEXT -> FORMAT_TEXT
    java.lang.String FORMAT_FILE_LIST -> FORMAT_FILE_LIST
    java.lang.String FORMAT_URL -> FORMAT_URL
    java.lang.String FORMAT_HTML -> FORMAT_HTML
    java.lang.String FORMAT_IMAGE -> FORMAT_IMAGE
    java.lang.String TYPE_IMAGE -> TYPE_IMAGE
    java.lang.String TYPE_SERIALIZED -> TYPE_SERIALIZED
    java.lang.String TYPE_PLAINTEXT -> TYPE_PLAINTEXT
    java.lang.String TYPE_HTML -> TYPE_HTML
    java.lang.String TYPE_URL -> TYPE_URL
    java.lang.String TYPE_TEXTENCODING -> TYPE_TEXTENCODING
    java.lang.String TYPE_FILELIST -> TYPE_FILELIST
    java.lang.String TYPE_URILIST -> TYPE_URILIST
    java.awt.datatransfer.DataFlavor urlFlavor -> urlFlavor
    java.awt.datatransfer.DataFlavor uriFlavor -> uriFlavor
    java.lang.String[] getNativeFormats() -> getNativeFormats
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
org.apache.harmony.awt.datatransfer.DataProxy -> org.apache.harmony.awt.datatransfer.DataProxy:
    java.lang.Class[] unicodeTextClasses -> unicodeTextClasses
    java.lang.Class[] charsetTextClasses -> charsetTextClasses
    org.apache.harmony.awt.datatransfer.DataProvider data -> data
    java.awt.datatransfer.SystemFlavorMap flavorMap -> flavorMap
    org.apache.harmony.awt.datatransfer.DataProvider getDataProvider() -> getDataProvider
    java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) -> getTransferData
    java.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor) -> getPlainText
    java.lang.Object getFileList(java.awt.datatransfer.DataFlavor) -> getFileList
    java.lang.Object getHTML(java.awt.datatransfer.DataFlavor) -> getHTML
    java.lang.Object getURL(java.awt.datatransfer.DataFlavor) -> getURL
    java.lang.Object getSerializedObject(java.awt.datatransfer.DataFlavor) -> getSerializedObject
    java.lang.String getCharset(java.awt.datatransfer.DataFlavor) -> getCharset
    java.lang.Object getTextRepresentation(java.lang.String,java.awt.datatransfer.DataFlavor) -> getTextRepresentation
    java.awt.Image getImage(java.awt.datatransfer.DataFlavor) -> getImage
    boolean isRGB(org.apache.harmony.awt.datatransfer.RawBitmap) -> isRGB
    boolean isBGR(org.apache.harmony.awt.datatransfer.RawBitmap) -> isBGR
    java.awt.image.BufferedImage createBufferedImage(org.apache.harmony.awt.datatransfer.RawBitmap) -> createBufferedImage
org.apache.harmony.awt.datatransfer.DataSnapshot -> org.apache.harmony.awt.datatransfer.DataSnapshot:
    java.lang.String text -> text
    java.lang.String[] fileList -> fileList
    java.lang.String url -> url
    java.lang.String html -> html
    org.apache.harmony.awt.datatransfer.RawBitmap rawBitmap -> rawBitmap
    java.lang.String[] nativeFormats -> nativeFormats
    java.util.Map serializedObjects -> serializedObjects
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    int[] getRawBitmapHeader() -> getRawBitmapHeader
    byte[] getRawBitmapBuffer8() -> getRawBitmapBuffer8
    short[] getRawBitmapBuffer16() -> getRawBitmapBuffer16
    int[] getRawBitmapBuffer32() -> getRawBitmapBuffer32
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
    byte[] getSerializedObject(java.lang.String) -> getSerializedObject
    java.lang.String[] getNativeFormats() -> getNativeFormats
org.apache.harmony.awt.datatransfer.DataSource -> org.apache.harmony.awt.datatransfer.DataSource:
    java.awt.datatransfer.DataFlavor[] flavors -> flavors
    java.util.List nativeFormats -> nativeFormats
    java.awt.datatransfer.Transferable contents -> contents
    boolean isHtmlFlavor(java.awt.datatransfer.DataFlavor) -> isHtmlFlavor
    java.awt.datatransfer.DataFlavor[] getDataFlavors() -> getDataFlavors
    java.lang.String[] getNativeFormats() -> getNativeFormats
    java.util.List getNativeFormatsList() -> getNativeFormatsList
    java.util.List getNativesForFlavors(java.awt.datatransfer.DataFlavor[]) -> getNativesForFlavors
    java.lang.String getTextFromReader(java.io.Reader) -> getTextFromReader
    java.lang.String getText(boolean) -> getText
    java.lang.String getText() -> getText
    java.lang.String[] getFileList() -> getFileList
    java.lang.String getURL() -> getURL
    java.lang.String getHTML() -> getHTML
    org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap() -> getRawBitmap
    org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap(java.awt.Image) -> getImageBitmap
    org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap32(java.awt.image.BufferedImage) -> getImageBitmap32
    byte[] getSerializedObject(java.lang.Class) -> getSerializedObject
    boolean isNativeFormatAvailable(java.lang.String) -> isNativeFormatAvailable
org.apache.harmony.awt.datatransfer.DataTransferThread -> org.apache.harmony.awt.datatransfer.DataTransferThread:
    org.apache.harmony.awt.datatransfer.DTK dtk -> dtk
    void run() -> run
    void start() -> start
org.apache.harmony.awt.datatransfer.DragSourceEventProxy -> org.apache.harmony.awt.datatransfer.DragSourceEventProxy:
    int DRAG_ENTER -> DRAG_ENTER
    int DRAG_OVER -> DRAG_OVER
    int DRAG_ACTION_CHANGED -> DRAG_ACTION_CHANGED
    int DRAG_MOUSE_MOVED -> DRAG_MOUSE_MOVED
    int DRAG_EXIT -> DRAG_EXIT
    int DRAG_DROP_END -> DRAG_DROP_END
    java.awt.dnd.DragSourceContext context -> context
    int type -> type
    int userAction -> userAction
    int targetActions -> targetActions
    int x -> x
    int y -> y
    int modifiers -> modifiers
    boolean success -> success
    void run() -> run
    java.awt.dnd.DragSourceDragEvent newDragSourceDragEvent() -> newDragSourceDragEvent
org.apache.harmony.awt.datatransfer.FlavorsComparator -> org.apache.harmony.awt.datatransfer.FlavorsComparator:
    int compare(java.awt.datatransfer.DataFlavor,java.awt.datatransfer.DataFlavor) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.harmony.awt.datatransfer.NativeClipboard -> org.apache.harmony.awt.datatransfer.NativeClipboard:
    int OPS_TIMEOUT -> OPS_TIMEOUT
    void onShutdown() -> onShutdown
    void onRestart() -> onRestart
org.apache.harmony.awt.datatransfer.RawBitmap -> org.apache.harmony.awt.datatransfer.RawBitmap:
    int width -> width
    int height -> height
    int stride -> stride
    int bits -> bits
    int rMask -> rMask
    int gMask -> gMask
    int bMask -> bMask
    java.lang.Object buffer -> buffer
    int[] getHeader() -> getHeader
org.apache.harmony.awt.datatransfer.TextFlavor -> org.apache.harmony.awt.datatransfer.TextFlavor:
    java.lang.Class[] unicodeTextClasses -> unicodeTextClasses
    java.lang.Class[] charsetTextClasses -> charsetTextClasses
    void addUnicodeClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String) -> addUnicodeClasses
    void addCharsetClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String,java.lang.String) -> addCharsetClasses
org.apache.harmony.awt.internal.nls.Messages -> org.apache.harmony.awt.internal.nls.Messages:
    java.util.ResourceBundle bundle -> bundle
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object) -> getString
    java.lang.String getString(java.lang.String,int) -> getString
    java.lang.String getString(java.lang.String,char) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object) -> getString
    java.lang.String getString(java.lang.String,java.lang.Object[]) -> getString
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    java.util.ResourceBundle setLocale(java.util.Locale,java.lang.String) -> setLocale
org.apache.harmony.awt.internal.nls.Messages$1 -> org.apache.harmony.awt.internal.nls.Messages$1:
    java.lang.String val$resource -> val$resource
    java.util.Locale val$locale -> val$locale
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.Object run() -> run
org.apache.harmony.misc.SystemUtils -> org.apache.harmony.misc.SystemUtils:
    int OS_WINDOWS -> OS_WINDOWS
    int OS_LINUX -> OS_LINUX
    int OS_UNKNOWN -> OS_UNKNOWN
    int ARC_IA32 -> ARC_IA32
    int ARC_IA64 -> ARC_IA64
    int ARC_UNKNOWN -> ARC_UNKNOWN
    int os -> os
    int arc -> arc
    int getOS() -> getOS
